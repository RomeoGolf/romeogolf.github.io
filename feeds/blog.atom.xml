<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RomeoGolf</title><link href="http://romeogolf.site/" rel="alternate"></link><link href="http://romeogolf.site/feeds/blog.atom.xml" rel="self"></link><id>http://romeogolf.site/</id><updated>2016-03-09T20:00:00+05:00</updated><entry><title>Linux — одна победа, одна ничья и одно поражение.</title><link href="http://romeogolf.site/linux-odna-pobeda-odna-nichia-i-odno-porazhenie.html" rel="alternate"></link><updated>2016-03-09T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-03-09:linux-odna-pobeda-odna-nichia-i-odno-porazhenie.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;Загадка монтирования дисков&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;Выключение кнопкой питания&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#eclipse"&gt;Обновление Eclipse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Продолжая движение к смене статуса Debian на домашней машине в качестве основной системы, я наткнулся на очередные задачи, часть из которых получается решить, часть решается лишь частично, а часть остается непобедимой.&lt;/p&gt;
&lt;h2 id="_1"&gt;Загадка монтирования дисков&lt;/h2&gt;
&lt;p&gt;В частности, при загрузке системы я заметил загадочную хрень в виде серии странных сообщений, типа&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;systemd-fstab-generator&lt;span class="o"&gt;[&lt;/span&gt;175&lt;span class="o"&gt;]&lt;/span&gt;: Failed to create mount unit file
/run/systemd/generator/media-ntfs&lt;span class="se"&gt;\x&lt;/span&gt;2dsdb2.mount, as it already exists. 
Duplicate entry in /etc/fstab?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Причем, таких строчек от загрузки к загрузке становилось больше.&lt;/p&gt;
&lt;p&gt;Это при том, что у меня диски, заполненные разной информацией еще в винде, подключаются с использованием fstab, где я прописал их вручную. Открываю fstab и вижу, что там действительно появилась куча строк, которые я не писал, причем, почти все встречаются по два-три раза в произвольном порядке. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# /etc/fstab: static file system information.
#
# Use &amp;#39;blkid&amp;#39; to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;
# / was on /dev/sdb3 during installation
UUID=6279-419e-b679 /               ext4    errors=remount-ro 0       1
/dev/sr0        /media/cdrom0   udf,iso9660 user,noauto     0       0
/dev/sda5   /mnt/WORK   ntfs    auto,exec,rw,nouser,async,iocharset=utf8,notail,relatime 0 0
/dev/sda6   /mnt/STORAGE    ntfs    auto,exec,rw,nouser,async,iocharset=utf8,notail,relatime 0 0
/dev/sda7   /mnt/FILES  ntfs    auto,exec,rw,nouser,async,iocharset=utf8,notail,relatime 0 0
/dev/sda8   /mnt/MISC   ntfs    auto,exec,rw,nouser,async,iocharset=utf8,notail,relatime 0 0
/dev/sdb2   /mnt/FILES2 ntfs    auto,exec,rw,nouser,async,iocharset=utf8,notail,relatime 0 0
/dev/sda7 /media/ntfs-sda7 ntfs-3g rw,noauto,dmask=000,fmask=000,user,locale=ru_RU.utf8,allow_other 0 0
/dev/sdb1 /media/ntfs-sdb1 ntfs-3g rw,noauto,dmask=000,fmask=000,user,locale=ru_RU.utf8,allow_other 0 0
/dev/sda5 /media/ntfs-sda5 ntfs-3g rw,noauto,dmask=000,fmask=000,user,locale=ru_RU.utf8,allow_other 0 0
/dev/sdb2 /media/ntfs-sdb2 ntfs-3g rw,noauto,dmask=000,fmask=000,user,locale=ru_RU.utf8,allow_other 0 0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;И вот те строки внизу, которые монтируются в /media/, размножаются просто неприлично.&lt;/p&gt;
&lt;p&gt;Жуть! Стер. Через пару загрузок (комп включен отнюдь не 24/7) вижу ту же картину и в консоли при загрузке, и в файле fstab. Что за дела?&lt;/p&gt;
&lt;p&gt;Полез в интернеты, ибо являюсь вполне себе чайником и не представляю вообще, откуда может такое быть. Формулировал вопрос и на русском, и на английском, и в гугле, и на stackoverflow &amp;mdash; ничего полезного. &lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Лирическое отступление&lt;/dt&gt;
&lt;dd&gt;Сам я, правда, вопрос на форумах не задавал, так как давно понял: если на мой вопрос есть ответ, то во всякого рода интернетах его уже обязательно кто-то задал, и кто-то, соответственно, ответил. А если это не так, то и на вопрос, заданный лично мною, тоже никто не ответит. Это правило подтверждалось несколько раз. Ни на один мой вопрос на форумах не было получено ни одного внятного ответа. А чаще &amp;mdash; даже и невнятного. С учетом того, что перед вопрошанием я сперва искал ответ самостоятельно.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;На форумах, однако, наметил несколько направлений возможного поиска в виде английских буквосочетаний:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;systend-fstab-generator&lt;/li&gt;
&lt;li&gt;hotplug&lt;/li&gt;
&lt;li&gt;automount&lt;/li&gt;
&lt;li&gt;hal&lt;/li&gt;
&lt;li&gt;halevt&lt;/li&gt;
&lt;li&gt;kudzu&lt;/li&gt;
&lt;li&gt;dracut (systemd-drakut)&lt;/li&gt;
&lt;li&gt;udev (systemd-udevd)&lt;/li&gt;
&lt;li&gt;fstab-sync&lt;/li&gt;
&lt;li&gt;submount&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Почитал про упомянутые штуки. Показалось, что udev &amp;mdash; наиболее вероятная кандидатура пакостника. Однако поиск по системным логам через &lt;code&gt;grep 'fstab'&lt;/code&gt; не дал ничего, и я не понял, кто и когда туда пишет.&lt;/p&gt;
&lt;p&gt;Тогда, предполагая, что этот &amp;laquo;кто-то&amp;raquo; пишет, основываясь на своих настройках, которые, в свою очередь, лежат где-то в &lt;code&gt;/etc/&lt;/code&gt;, запустил поиск файла, содержащего &lt;code&gt;'fstab'&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ grep -r &lt;span class="s2"&gt;&amp;quot;fstab&amp;quot;&lt;/span&gt; /etc/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;и самым интересным в результатах поиска был &lt;code&gt;/etc/udev/rules.d/10-automount.rules&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#ACTION==&amp;quot;add&amp;quot; KERNEL==&amp;quot;sd[a-z][0-9]&amp;quot; RUN+=&amp;quot;/bin/mkdir -p /mnt/%k&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#ACTION==&amp;quot;add&amp;quot; KERNEL==&amp;quot;sd[a-z][0-9]&amp;quot; RUN+=&amp;quot;/bin/mount -o uid=1000 /dev/%k /mnt/%k&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#ACTION==&amp;quot;remove&amp;quot; KERNEL==&amp;quot;sd[a-z][0-9]&amp;quot; RUN+=&amp;quot;/bin/rmdir /mnt/%k&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#ACTION==&amp;quot;add&amp;quot; KERNEL==&amp;quot;sd[a-z][0-9]&amp;quot; RUN+=&amp;quot;/bin/mkdir -p /mnt/%E{ID_VENDOR}_%E{ID_MODEL}_%n&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#ACTION==&amp;quot;add&amp;quot; KERNEL==&amp;quot;sd[a-z][0-9]&amp;quot; RUN+=&amp;quot;/bin/mount -o uid=1000 /dev/%k /mnt/%E{ID_VENDOR}_%E{ID_MODEL}_%n&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#ACTION==&amp;quot;remove&amp;quot; KERNEL==&amp;quot;sd[a-z][0-9]&amp;quot; RUN+=&amp;quot;/bin/rmdir /mnt/%E{ID_VENDOR}_%E{ID_MODEL}_%n&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# монтирование съемных накопителей&lt;/span&gt;
&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sd[a-z]&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GOTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;do-disk-rules&amp;quot;&lt;/span&gt;
KERNEL!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sd[a-z][0-9]&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GOTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;end-of-file&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;do-disk-rules&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_USB_DRIVER&lt;span class="o"&gt;}=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;usb-storage&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GROUP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;storage&amp;quot;&lt;/span&gt;
IMPORT&lt;span class="o"&gt;{&lt;/span&gt;program&lt;span class="o"&gt;}=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/sbin/blkid -o udev -p %N&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;remove&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}&lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/sed -i &amp;#39;/\/dev\/%k /d&amp;#39; /etc/fstab&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;remove&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}&lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/rmdir /media/&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="s2"&gt;nv{ID_FS_TYPE}-%k&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}&lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/mkdir -p /media/&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="s2"&gt;nv{ID_FS_TYPE}-%k&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# монтирование раздела fat32&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vfat&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/sed -i &lt;/span&gt;
&lt;span class="s2"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="s2"&gt;\/dev/%k /media/&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="s2"&gt;nv{ID_FS_TYPE}-%k vfat rw,noauto,noatime,dmask=000,user,fmask=000,iocharset=utf8 0 0&amp;#39; /etc/fstab&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# монтирование раздела ntfs&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ntfs&amp;quot;&lt;/span&gt;, RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/sed -i &lt;/span&gt;
&lt;span class="s2"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="s2"&gt;\/dev/%k /media/&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="s2"&gt;nv{ID_FS_TYPE}-%k ntfs-3g rw,noauto,dmask=000,fmask=000,user,locale=ru_RU.utf8,allow_other 0 0&amp;#39; /etc/fstab&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# монтирование прочих ФС&lt;/span&gt;
&lt;span class="nv"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;add&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}&lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;, ENV&lt;span class="o"&gt;{&lt;/span&gt;ID_FS_TYPE&lt;span class="o"&gt;}&lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ntfs|vfat&amp;quot;&lt;/span&gt;, 
RUN+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/bin/sed -i &amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$a&lt;/span&gt;&lt;span class="s2"&gt;\/dev/%k /media/&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="s2"&gt;nv{ID_FS_TYPE}-%k &lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="s2"&gt;nv{ID_FS_TYPE}  defaults,user 0 0&amp;#39; /etc/fstab&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;end-of-file&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Строчка в правилах монтирования однозначно соответствовала тому, что появляется в fstab. Возможно, авторы пакета, создавая настройки по умолчанию, предполагали, что основным диском будет hda, а sda &amp;mdash; уже всякие флешки и все такое. А у меня два SATA-винчестера, и флешка становится sdc. Ну что же, пакостник найден, надо его слегка укротить. Сперва я сделал первое, что пришло в голову: вписал  после &lt;code&gt;# монтирование съемных накопителей&lt;/code&gt; пару строк:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# монтирование съемных накопителей&lt;/span&gt;
&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sda[0..9]&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GOTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;end-of-file&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sdb[0..9]&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GOTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;end-of-file&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sd[a-z]&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GOTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;do-disk-rules&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# ... и далее по тексту ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;чтобы при обнаружении первых двух SATA-дисков правила монтирования пропускались. Но буквально парой минут позже понял, что это дурь, и сделал проще &amp;mdash; убрал эти строки, а во всех &lt;code&gt;sd[a-z]&lt;/code&gt; заменил &lt;code&gt;a&lt;/code&gt; на &lt;code&gt;c&lt;/code&gt;: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sd[c-z]&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;GOTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;do-disk-rules&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;И в остальных строках так же. Теперь &lt;code&gt;/ets/fstab&lt;/code&gt; после перезагрузок остается неизменным (даже после автомонтирования флешек), и при загрузке упомянутая ересь тоже не встречается. Одну проблемку решил. Засчитываю победу.&lt;/p&gt;
&lt;h2 id="_2"&gt;Выключение кнопкой питания&lt;/h2&gt;
&lt;p&gt;Фишка, давно ставшая привычной в Windows, довольно удобная. Все-таки, одно движение пальца, хоть и надо тянуться к системнику. Дай, думаю, попробую&amp;hellip; А компьютер вырубился, как будто провод выдернули.&lt;/p&gt;
&lt;p&gt;Полез опять в интернеты. Нашел, что за отслеживание событий, связанных с питанием, отвечает acpi. Убедился, что такой пакет у меня установлен. Настройки в &lt;code&gt;/etc/acpi/powerbtn-acpi-support.sh&lt;/code&gt; посмотрел &amp;mdash; нормально все.&lt;/p&gt;
&lt;p&gt;Там указано, что для совместимости со старыми версиями при наличии в определенных местах старых скриптов все игнорируется и &lt;code&gt;exit 0&lt;/code&gt;, так у меня в тех местах нету нифига лишнего&amp;hellip;&lt;/p&gt;
&lt;p&gt;Тут где-то в интернете (не помню точно, в чьем-то блоге) одному товарищу нужна была обратная задача: добиться отсутствия реакции на кнопку, и он в упомянутом sh-файле закрыл предпоследнюю строку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/sbin/shutdown -h -P now &lt;span class="s2"&gt;&amp;quot;Power button pressed&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Сделал так же. Перезапустил демон:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ sudo acpid restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ничего не изменилось. Вернул строчку обратно (раскомментировал) &amp;mdash; заработало! Почти&amp;hellip; &lt;/p&gt;
&lt;p&gt;В общем, после этих телодвижений, имевших в сумме чистый ноль, по нажатию кнопки питания компьютер стал засыпать. Ну, и просыпаться, конечно. Почитал повнимательнее скрипт &amp;mdash; а там упоминаются настройки среды, мол, они тоже учитываются. Слазил в настройки Гнома (Приложения &amp;ndash; Системные &amp;ndash; Дополнительные параметры &amp;ndash; Электропитание), а в них для параметров питания указано &amp;laquo;Hibernate&amp;raquo; по кнопке питания. Изменил на &amp;laquo;Shutdown&amp;raquo;. Теперь компьютер засыпает по кнопке сна на клавиатуре и выключается по кнопке питания на системнике.&lt;/p&gt;
&lt;p&gt;Очень странно. Единственное мое активное действие (помимо закрытия и открытия строчки в скрипте) &amp;mdash; перезапуск демона acpid, но я посмотрел логи &lt;code&gt;grep 'acpi'&lt;/code&gt; и не нашел отличий &amp;laquo;до&amp;raquo; и &amp;laquo;после&amp;raquo;. Он и раньше запускался.&lt;/p&gt;
&lt;p&gt;Загадочно. Вроде, все работает. Вроде, раньше не работало. Вроде, ничего не делал. Засчитываю ничью.&lt;/p&gt;
&lt;h2 id="eclipse"&gt;Обновление Eclipse&lt;/h2&gt;
&lt;p&gt;А вот тут, что называется, косорезик вышел. Поставил Eclipse из репозитория через Synaptic. Встала версия 3.8, и где-то в Help нашел, что это Indigo. И это в наше время, когда космические корабли уже долетели до Марса, и даже до Марса 2, и под виндой у меня стоит 4.5.1. Причем, обновился до нее с Луны довольно просто, указав в нужных местах сервера обновлений и запустив не то установку нового ПО, не то обновление, не то оба по очереди. &lt;/p&gt;
&lt;p&gt;А тут фигушки! Основная часть, которая собственно Eclipse, ставиться наотрез отказалась. Дескать, стоит уже и незачем ставить снова, и неважно, что версия уже новая&amp;hellip; Ну, а все остальные &amp;laquo;запчасти&amp;raquo; зависят от движка и тоже не хотят обновляться. Часа полтора долбился в эту стенку. Потом плюнул, снес Eclipse начисто и скачал с официального сайта tar-архив. Распаковал в домашней папке &amp;mdash; вот и вся установка, все работает. Благо, зависимостей у него особых нет, кроме Java, а с ней я разобрался чуть раньше, снес openjdk и поставил продукт от Oracle. А то под open у меня напрочь отказывались запускаться поделки, которые я наваял еще в винде, те же &amp;laquo;Быки и коровы&amp;raquo;.&lt;/p&gt;
&lt;p&gt;То есть, задача решена, но ни разу не так, как хотелось, а главное &amp;mdash; непонятно, почему не получилось обновить, когда в винде это было несложно. Как-то немного обидно.&lt;/p&gt;</summary><category term="linux"></category></entry><entry><title>Возвращение в Линукс</title><link href="http://romeogolf.site/vozvrashchenie-v-linuks.html" rel="alternate"></link><updated>2016-02-16T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-02-16:vozvrashchenie-v-linuks.html</id><summary type="html">&lt;p&gt;Я не люблю продукцию компании Microsoft. В особенности, ту ее часть, которая имеет отношение к операционным системам. Не люблю не просто так, за название, а обоснованно, по пунктам. Поэтому уже давно пытаюсь сделать основной операционкой хотя бы дома нечто иное. Ну, то есть, Linux, потому что больше-то и нечего.&lt;/p&gt;
&lt;p&gt;Однако, все время что-нибудь складывается не в ту сторону. Ранние давние попытки были сильно ограничены отсутствием нормального интернета (сначала dial-up, потом GPRS, с оплатой по трафику и без вариантов). Не хватало информации, было грустно с репозиториями (дорого), поэтому ставилось то, что удавалось раздобыть на двух &amp;ndash; шести DVD-дисках, чтобы был сразу более-менее приличный комплект программ в наборе. Попробовал в ту пору RedHat (еще до того, как он стал федориным корем), Alt, Linux XP (еще и такое было), ASP и Mandrake. Такой зоопарк в основном потому, что для обновления проще было поставить заново то новое, что удалось раздобыть, чем обновить то, что есть.&lt;/p&gt;
&lt;p&gt;Времени отнимало массу, а полностью отказаться от Windows дома не получалось все равно, потому что приходилось часть работы делать дома, а на работе &amp;mdash; Windows, а соответствующий софт в Wine не запускался. Да и документы Word в OpenOffice открывались так себе, а сохранялись в вордовский формат еще хуже, особенно с учетом того, что приходилось работать с чужими творениями, а там и таблицы в таблицах, и подстрочные символы через формулу, и 500 стилей&amp;hellip; Или переделывать все по-человечески дня три, или открыть в Word и за две минуты сделать все, что от меня требуется. &lt;/p&gt;
&lt;p&gt;Таким образом, на компьютере две системы, но вторая (при всей нелюбви к первой) не способна заменить первую полностью, а времени и сил на настройку и обслуживание требует больше. Поэтому запускается все реже и реже&amp;hellip;&lt;/p&gt;
&lt;p&gt;Потом Linux стал поинтереснее, а работы на дом поменьше. Опять же, появился безлимит по выделенной линии. Второй системой побывали более свежий Alt, Mandriva и (просто посмотреть, что за ерунда такая) Ubuntu. С учетом того, что в Windows у меня используется в основном софт, портированный из Linux, Mandriva загружалась все чаще &amp;mdash; не было особой разницы, в чем работать. Для интернета продукты от Mozilla, обработка фото &amp;mdash; RawTherapee и GIMP, кодинг &amp;mdash; Lazarus, Java (в Eclipce), Python. Простые тексты &amp;mdash; GVim, посложнее &amp;mdash; OOo. С музыкой и кино проблем стало меньше. Практически перестал дома использовать специфические Windows-программы, нужные по работе. Однако, осталась необходимость иногда дома поработать с документами (Word, естественно), а самое неприятное &amp;mdash; фильм-сканер Acer ScanWit 2720, который со свободным софтом завести у меня не получилось никак, а ставить платный не хотелось потому, что не было ни малейшей уверенности, что деньги не будут на ветер. Никто не мог дать гарантии, заработает ли. Максимум, что у меня получилось, &amp;mdash; сканер определился в системе и отреагировал на программную кнопку извлечения лотка. И даже однажды начал Preview, но не смог закончить.&lt;/p&gt;
&lt;p&gt;Да, Linux к этому времени стал дружелюбнее и способен заменить винду в существенной части случаев. Но остались трудности в настройке &amp;laquo;под себя&amp;raquo;, неполная совместимость софта, сканер не работает&amp;hellip; Кроме того, был примерно годовой период подготовки и сдачи канд. минимума по английскому, сопровождавшийся чтением приличного объема на английском помимо текстов для подготовки к экзамену. А это - ABBYY Lingvo, честно купленный и используемый на нетбуке с WinXP, поскольку извините, но это лучший словарь в электронном виде. В ту пору они (ABBYY) не собирались даже смотреть в сторону Linux, а то, что было в Linux, было существенно хуже. В общем, опять заглохло. Второй системой остался на тот момент Debian.&lt;/p&gt;
&lt;p&gt;И вот в эти выходные и ближайшие к ним пару дней в связи с больничным появилось &amp;laquo;лишнее&amp;raquo; время. Плюс к этому стало еще меньше нужного мне софта, который не имеет аналогов в Linux и не запускается в Wine, пленки существенной частью отсканированы, основной объем переводов-чтения остался позади, а Microsoft с очередной ОС номер десять (которая, что логично, сразу после номера восемь), похоже, совсем края потерял.&lt;/p&gt;
&lt;p&gt;Итак, запустил я Debian. Обновил его до восьмерки jessie. И обнаружил, что слетели все примочки для Gnome, которые я ставил когда-то для красоты, удобства и привычности &amp;mdash; типа аналога панели задач. Опять же, iceweesel, который типа Mozilla firefox, только для Debian, стал показывать очень много букв &amp;laquo;ш&amp;raquo; в самых неожиданных местах, короче, нехорошо у него стало с русификацией. Что удивляет после ухода на UTF8, все-таки, уже довольно давно кончился зоопарк кодировок.&lt;/p&gt;
&lt;p&gt;Добавил новый репозиторий в список для apt-get, обновил софт. Русский в iceweesel наладился. Добавил заодно в него несколько дополнений.&lt;/p&gt;
&lt;p&gt;Поставил pip3, с его помощью &amp;mdash; pelican, markdown. Попробовал в Debian сгенерировать сайт на пеликане, получилось один в один как под виндой, даже проще. Проще &amp;mdash; потому что Python установлен по-человечески, а не как у меня в Windows, и pelican &amp;mdash; это команда безо всяких указаний пути к ней, поэтому &lt;code&gt;pelican content&lt;/code&gt; работает в корне проекта сайта без вопросов. И, кстати, сегодняшний сайт собирается в винде около 6 секунд, а в линуксе &amp;mdash; около одной.&lt;/p&gt;
&lt;p&gt;Поставил еще Git и cups. Начал заводить принтер, Brother HL2040, и появились первые чудеса. Не печатает, зараза! То есть, настройка через web-интерфейс cups прошла быстро и просто, принтер нашелся практически сам, определился, как готовый, принял все настройки, но пробное задание сперва отправлено, потом завершено, и даже принтер пожужжал, но ничего не напечатал, а задание в списке заданий &amp;laquo;отменено пользователем&amp;raquo;. Начал плясать с правами пользователей на принтер и с правами принтера на пользователей. Запускать печать от имени кого попало и из разных приложений, и из командной строки. Результат один. Страдал дня два.&lt;/p&gt;
&lt;p&gt;А потом пришла в голову простая мысль. Хотя принтер и определился, и опознался, и даже какие-то драйвера вроде бы установились, с названием, очень похожим на принтер, но, все-таки, может быть, совершенно случайно, вдруг&amp;hellip; Короче, нашел и скачал PPD-файл для своего принтера и указал в настройках. И заработало! И более того, даже качество печати получше, чем этот же документ, запущенный из-под винды.&lt;/p&gt;
&lt;p&gt;А пока возился с принтером, обнаружил еще одну неприятность. Очень неприятную неприятность. Стало зависать. Опытный линуксоид бросит в меня банановой коркой и скажет, что Debian зависнуть не может. Ну хорошо, пусть не может. Но мышь не шевелится, на клавиатуру не реагирует. Что зависло? Как скажет любой непродвинутый пользователь, зависло &amp;laquo;всё&amp;raquo;.&lt;/p&gt;
&lt;p&gt;Причем, изредка зависало так, что все же можно было переключиться в tty1. Иногда была реакция только на SysRq, правда, заметная реакция &amp;mdash; только на перезагрузку. А иногда можно было перезагрузиться только аппаратным ресетом.&lt;/p&gt;
&lt;p&gt;Погулял по форумам. Обнаружил, что я в этой засаде не одинок, но не видел однозначного решения проблемы. Но одно из самых утоптанных направлений &amp;mdash; видеокарта. Но у меня же интегрированная! Intel i5, и в нем видяха встроенная, для моих целей достаточно, я не геймер, решил при покупке компьютера не переплачивать. Залез в биос, а там написано, что включена PCI-express-видеокарта. Странно&amp;hellip; Переключил на встроенную, перезагрузил &amp;mdash; черный экран. Не понял&amp;hellip; Полез посмотреть (заодно и пропылесосил) &amp;mdash; о-па! А у меня, оказывается, видеокарта! GF240, и вот тут-то я вспомнил, откуда она взялась, ага, была такая оказия нахаляву.&lt;/p&gt;
&lt;p&gt;И началась эпопея установки драйверов. Сперва был скачан файл run с официального сайта. Он не запустился, потому что обнаружил запущенные иксы. Хорошо, переключился в терминал, остановил иксы. Тогда run не запустился, потому что не нашел GCC. Странно, вроде было такое&amp;hellip; Попробовал скачать &amp;mdash; не качается, обнаружены битые пакеты в зависимостях. В каких зависимостях - так и не понял. Запустил (после перезагрузки, в иксах) Synaptic, попробовал исправить ошибки в пакетах &amp;mdash; к пакетам нет вопросов. Попробовал поставить GCC &amp;mdash; отмечается не зеленым квадратиком, а красным, говорит, что в зависимостях gcc-4.9, и это, мол, проблема, битые пакеты. Попробовал теперь исправить ошибки в пакетах &amp;mdash; не исправляются.&lt;/p&gt;
&lt;p&gt;Нашел в списке системных программ еще какие-то обновления, оказалось, у меня там висят два обновления &amp;mdash; binutils и какие-то утилиты для работы с базами данных Berkley. Обновления почему-то заблокированные, и через это самое приложение не ставятся ни в какую. Установил их через apt-get install, они установились за милую душу. После чего элементарно встал и gcc, вопросы с зависимостями кончились. Похоже, у Synaptic пути к репозиториям отличаются от путей для apt-get, хотя я пытался как-то настраивать&amp;hellip; &lt;/p&gt;
&lt;p&gt;Ладно, продолжаем ставить драйвер видеокарты. Опять в терминал, опять останавливаю иксы, запускаю &amp;mdash; теперь ему не нравится gcc, слишком новый. Но можно продолжить без проверки версии. Опять же, этот run сам отключил те видеодрайвера, которые стояли по умолчанию. В результате изображение на экране в иксах стало совсем поганым.&lt;/p&gt;
&lt;p&gt;Однако, понадобился kernel-sources. Пакета с таким названием apt-get не знает. Какой фигни я наустанавливал в поисках того, что надо видеодровам&amp;hellip; Но того, что нужно &amp;mdash; не нашел. Зато на форумах нашел, что можно поставить &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# aptitude install nvidia-glx nvidia-kernel-`uname -r` nvidia-kernel-dkms nvidia-settings nvidia-xconfig&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;где я вместо aptitude сделал apt-get. И все как-то само поставилось и заработало.&lt;/p&gt;
&lt;p&gt;Адаптировал vimrc из виндовской версии VIM для линуксовой &amp;mdash; кодировку комментариев и формат конца строки. Можно пробовать обживаться дальше. Посмотрим, на сколько хватит в этот раз.&lt;/p&gt;</summary><category term="linux"></category></entry><entry><title>Pelican и модуль Python-Markdown</title><link href="http://romeogolf.site/pelican-i-modul-python-markdown.html" rel="alternate"></link><updated>2016-01-30T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-30:pelican-i-modul-python-markdown.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Содержание&lt;/strong&gt;&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#markdown"&gt;Собственный Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;Особенности&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;Отличия&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;Расширения&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;Официально поддерживаемые расширения&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extra"&gt;Extra&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#markdown-html"&gt;Markdown внутри блоков HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#markdown-html_1"&gt;Вложенный Markdown внутри блоков HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#abbreviations"&gt;Abbreviations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#attribute-lists"&gt;Attribute Lists&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_5"&gt;Блочные элементы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;Строчные элементы&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#definition-lists"&gt;Definition Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fenced-code-blocks"&gt;Fenced Code Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#footnotes"&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tables"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#smart-strong"&gt;Smart Strong&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extra_1"&gt;Extra &amp;mdash; заключение&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#admonition"&gt;Admonition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codehilite"&gt;CodeHilite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#headerid"&gt;HeaderId&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#meta-data"&gt;Meta-Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#new-line-to-break-extension"&gt;New-Line-to-Break Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sane-lists"&gt;Sane Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#smartypants"&gt;SmartyPants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wikilinks"&gt;WikiLinks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;Заключение&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="markdown"&gt;Собственный Markdown&lt;/h2&gt;
&lt;p&gt;Как сказано в &lt;a href="http://daringfireball.net/projects/markdown/"&gt;официальной документации&lt;/a&gt;, &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown &amp;mdash; это две вещи: (1) синтаксис форматирования простого текста, и (2) программный инструмент, написанный на Perl, который преобразует форматирование простого текста в &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Однако, существует уже масса реализаций, не только на Perl. Для пеликана нас интересует, разумеется, модуль для Python. Информацию о нем можно получить из &lt;a href="https://pythonhosted.org/Markdown/index.html"&gt;официальной документации&lt;/a&gt;, на сегодняшний день свежая версия &amp;mdash; 2.6.5.&lt;/p&gt;
&lt;p&gt;Дальнейший текст существенной частью является вольным частичным переводом упомянутой документации, примеры взяты непосредственно из нее же. Кое-что при переводе было пропущено, так как имеет весьма слабое касательство к Пеликану, зато добавлены некоторые примечания от себя, а также некоторые примеры даны не только в виде результирующего &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-кода, но и в виде того, что, собственно, будет видно в итоге.&lt;/p&gt;
&lt;h2 id="_1"&gt;Особенности&lt;/h2&gt;
&lt;p&gt;В дополнение к базовому синтаксису, Python-Markdown поддерживает следующие особенности:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Интернациональный ввод&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python-Markdown позволяет вводить информацию на любых языках, поддерживаемый Unicode, включая двунаправленный текст. Тестовый комплекс включает документы, написанные на русском и арабском.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Расширения&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Представлены различные расширения (включая extra) для изменения и/или расширения базового синтаксиса. Кроме того, доступен открытый Extension API для написания ваших собственных расширений.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Выходные форматы&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python-Markdown может выводить документы в HTML4, XHTML и HTML5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Интерфейс командной строки&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Кроме библиотеки Python, для вашего удобства доступен сценарий командной строки. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;Отличия&lt;/h2&gt;
&lt;p&gt;Несмотря на то, что Python-Markdown пытается полностью реализовать markdown, как описано в правилах синтаксиса, правила можно интерпретировать неоднозначно, и разные реализации порой отличаются своим поведением. Известные и намеренные отличия Python-Markdown:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Выделение в середине слова&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Python-Markdown по умолчанию игнорирует выделение в середине слова. Другими словами, &lt;code&gt;some_long_filename.txt&lt;/code&gt; не станет &lt;code&gt;some&amp;lt;em&amp;gt;long&amp;lt;/em&amp;gt;filename.txt&lt;/code&gt;. Это может быть при желании отключено.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Отступы/размер табуляции&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Синтаксические правила ясно утверждают, что &amp;laquo;если пункт списка состоит из нескольких параграфов, каждый последующий параграф &lt;strong&gt;должен&lt;/strong&gt; иметь отступ или 4 пробела, или один таб&amp;raquo; (выделение добавлено). Однако, многие реализации не навязывают это правило и позволяют менее 4 пробелов отступа. Реализация Python-Markdown рассматривает несоблюдение этого правила, как ошибку.&lt;/p&gt;
&lt;p&gt;В случае, если некто предпочитает другое поведение, длину табуляции можно установить такого размера, какого пожелаете. Однако, учтите, что это повлияет на все аспекты синтаксиса (включая корневой уровень блоков кода).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Последовательные списки&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Хотя синтаксические правила недостаточно ясны на этот счет, многие реализации (включая оригинальную) не заканчивают один список и начинают второй при изменении маркера списка (звездочки, плюсы, дефисы и цифры). Для совместимости Python-Markdown поддерживает такое поведение и не планирует менять его в обозримом будущем.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Про установку модуля, наверное, неинтересно читать. Писать уж точно не интересно, она ничем не отличается от любой другой и уже не раз описана. А вот про применение с учетом особенностей и отличий рассказать стоит.&lt;/p&gt;
&lt;p&gt;Про использование модуля в программах на языке Python переводить документацию тоже не вполне уместно. Pelican достаточно умная птица, чтобы избавить пользователя от копания в тонкостях программирования, позволяя ограничиться настройкой поведения. Грубо говоря, модуль предоставляет пару-тройку функций, например, &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Этой функции надо обязательно передать текст для обработки и можно добавить дополнительные параметры, типа используемых расширений вместе с их конфигурацией. Эту функцию Pelican сам где-то и вызывает, не наше дело. А вот настроить ее поведение &amp;mdash; наше дело. Для этого надо иметь представление о расширениях.&lt;/p&gt;
&lt;h2 id="_3"&gt;Расширения&lt;/h2&gt;
&lt;p&gt;Python-Markdown предлагает гибкий механизм расширений, который делает возможным изменение и/или расширение поведения парсера без необходимости редактирования его файлов исходного кода.&lt;/p&gt;
&lt;h3 id="_4"&gt;Официально поддерживаемые расширения&lt;/h3&gt;
&lt;p&gt;Перечисленные ниже расширения включены (как минимум) в большинство последних релизов и официально поддерживаются Python-Markdown. Если у вас типичная установка Python-Markdown, эти расширения уже доступны для применения с использованием их имени из второй колонки&lt;/p&gt;
&lt;div class="colortable"&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Расширение&lt;/th&gt;
&lt;th&gt;Имя&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Extra&lt;/td&gt;
&lt;td&gt;markdown.extensions.extra&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Abbreviations&lt;/td&gt;
&lt;td&gt;markdown.extensions.abbr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Attribute Lists&lt;/td&gt;
&lt;td&gt;markdown.extensions.attr_list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Definition Lists&lt;/td&gt;
&lt;td&gt;markdown.extensions.def_list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Fenced Code Blocks&lt;/td&gt;
&lt;td&gt;markdown.extensions.fenced_code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Footnotes&lt;/td&gt;
&lt;td&gt;markdown.extensions.footnotes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Tables&lt;/td&gt;
&lt;td&gt;markdown.extensions.tables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;gt; Smart Strong&lt;/td&gt;
&lt;td&gt;markdown.extensions.smart_strong&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Admonition&lt;/td&gt;
&lt;td&gt;markdown.extensions.admonition&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CodeHilite&lt;/td&gt;
&lt;td&gt;markdown.extensions.codehilite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HeaderId&lt;/td&gt;
&lt;td&gt;markdown.extensions.headerid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Meta-Data&lt;/td&gt;
&lt;td&gt;markdown.extensions.meta&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;New Line to Break&lt;/td&gt;
&lt;td&gt;markdown.extensions.nl2br&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sane Lists&lt;/td&gt;
&lt;td&gt;markdown.extensions.sane_lists&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SmartyPants&lt;/td&gt;
&lt;td&gt;markdown.extensions.smarty&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table of Contents&lt;/td&gt;
&lt;td&gt;markdown.extensions.toc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WikiLinks&lt;/td&gt;
&lt;td&gt;markdown.extensions.wikilinks&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Существуют также расширения, которые разрабатывают и публикуют различные организации и одиночные разработчики. Для вашего удобства их &lt;a href="https://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions"&gt;список&lt;/a&gt; поддерживается на wiki. Команда Python-Markdown  не предлагает официальной поддержки таких расширений, в случае чего следует обращаться к их разработчикам.&lt;/p&gt;
&lt;h3 id="extra"&gt;Extra&lt;/h3&gt;
&lt;p&gt;Подборка различных расширений, которые (главным образом) имитируют одноименное расширение для PHP Markdown. Поддерживаемые расширения:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abbreviations&lt;/li&gt;
&lt;li&gt;Attribute Lists&lt;/li&gt;
&lt;li&gt;Definition Lists&lt;/li&gt;
&lt;li&gt;Fenced Code Blocks&lt;/li&gt;
&lt;li&gt;Footnotes&lt;/li&gt;
&lt;li&gt;Tables&lt;/li&gt;
&lt;li&gt;Smart Strong&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="markdown-html"&gt;Markdown внутри блоков &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;&lt;/h4&gt;
&lt;p&gt;В отличие от других особенностей Extra, эта особенность встроена в ядро markdown и включается, когда задействуют markdown.extensions.extra.&lt;/p&gt;
&lt;p&gt;Содержимое любых блочных элементов &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-кода может быть отформатировано при помощи Markdown простым добавлением атрибута markdown в открывающем теге. Этот атрибут будет удален из результирующего текста, но все остальные атрибуты будут сохранены.&lt;/p&gt;
&lt;p&gt;Если значение атрибута markdown установлено в &amp;laquo;1&amp;raquo; (что рекомендуется) или другое значение за исключением &amp;laquo;span&amp;raquo; или &amp;laquo;block&amp;raquo;, будет выполняться поведение по умолчанию: элементы &lt;code&gt;p, h[1-6], li, dd, dt, td, th, legend&lt;/code&gt; и &lt;code&gt;address&lt;/code&gt; пропускают анализ блока, в то время как остальные &amp;mdash; нет. Если поведение по умолчанию перекрыто значением &lt;code&gt;span&lt;/code&gt;, анализ блока будет пропущен независимо от тега. Если поведение по умолчанию перекрыто значением &lt;code&gt;block&lt;/code&gt;, анализ блока будет выполняться независимо от тега. Простой пример:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This is *true* markdown text.

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
This is *true* markdown text.
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет преобразован в такое:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This is &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;true&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; markdown text.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This is &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;true&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; markdown text.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="markdown-html_1"&gt;Вложенный Markdown внутри блоков &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;&lt;/h4&gt;
&lt;p&gt;Вложенные элементы более чувствительны и должны использоваться с осторожностью. Чтобы избежать неожиданных результатов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Вкладывайте элементы только внутри блочных элементов.&lt;/li&gt;
&lt;li&gt;После закрывающих тегов внутренних элементов ставьте пустую строку.&lt;/li&gt;
&lt;li&gt;Не делайте более одного уровня вложенности.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Сложный пример:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Example&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

The text of the `Example` element.

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DefaultBlockMode&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
This text gets wrapped in `p` tags.
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

The tail of the `DefaultBlockMode` subelement.

&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DefaultSpanMode&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
This text *is not* wrapped in additional `p` tags.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

The tail of the `DefaultSpanMode` subelement.

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;span&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SpanModeOverride&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
This `div` block is not wrapped in paragraph tags.
Note: Subelements are not required to have tail text.
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;block&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BlockModeOverride&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
This `p` block *is* foolishly wrapped in further paragraph tags.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

The tail of the `BlockModeOverride` subelement.

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;RawHtml&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Raw HTML blocks may also be nested.
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

This text is after the markdown in HTML.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;превратится в &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The text of the &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Example&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; element.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DefaultBlockMode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This text gets wrapped in &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;p&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; tags.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The tail of the &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;DefaultBlockMode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; subelement.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DefaultSpanMode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
This text &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;is not&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; wrapped in additional &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;p&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; tags.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The tail of the &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;DefaultSpanMode&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; subelement.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SpanModeOverride&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
This &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;div&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; block is not wrapped in paragraph tags.
Note: Subelements are not required to have tail text.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BlockModeOverride&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;p&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; block &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;is&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;em&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; foolishly wrapped in further paragraph tags.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The tail of the &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;BlockModeOverride&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; subelement.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;RawHtml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
Raw HTML blocks may also be nested.
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This text is after the markdown in HTML.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="abbreviations"&gt;Abbreviations&lt;/h4&gt;
&lt;p&gt;Добавляет возможность указания аббревиатур. А именно: любая добавленная аббревиатура будет заключена в тег &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;. Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;The HTML specification 
is maintained by the W3C.

*[HTML]: Hyper Text Markup Language
*[W3C]:  World Wide Web Consortium
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;The &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt; specification 
is maintained by the &lt;abbr title="World Wide Web Consortium"&gt;W3C&lt;/abbr&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Благодаря этому примеру во всем тексте статьи буквосочетание &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt; будет иметь вид аббревиатуры. Так что не удивляйтесь, чего это вдруг автор решил пояснить эти буквы &amp;mdash; это не я, это пример из официальной документации шалит, но это жертва, на которую я намерен пойти.&lt;/p&gt;
&lt;p&gt;Расширение не требует каких-либо специальных опций настройки.&lt;/p&gt;
&lt;h4 id="attribute-lists"&gt;Attribute Lists&lt;/h4&gt;
&lt;p&gt;Добавляет синтаксис для задания атрибутов различных &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-элементов на выходе обработки Markdown. Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Примерный список атрибутов выглядит примерно так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{: #someid .someclass somekey=&amp;#39;some value&amp;#39; }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Слово, начинающееся с решетки &lt;code&gt;#&lt;/code&gt;, будет установлено в качестве id элемента. &lt;/p&gt;
&lt;p&gt;Слово, начинающееся с точки &lt;code&gt;.&lt;/code&gt;, будет добавлено в список классов, определенных для элемента.&lt;/p&gt;
&lt;p&gt;Пара &amp;laquo;ключ/значение&amp;raquo; (&lt;code&gt;somekey='some value'&lt;/code&gt;) будет установлена для элемента.&lt;/p&gt;
&lt;p&gt;Имейте в виду, что, хотя слово с точкой добавляет класс, использование пары ключ/значение будет всегда перекрывать ранее определенный атрибут. Рассмотрите следующее:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{: #id1 .class1 id=id2 class=&amp;quot;class2 class3&amp;quot; .class4 }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Этот пример приведет в результате к установке таких атрибутов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;id=&amp;quot;id2&amp;quot; class=&amp;quot;class2 class3 class4&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="_5"&gt;Блочные элементы&lt;/h5&gt;
&lt;p&gt;Чтобы определить атрибуты для блочного элемента, список атрибутов необходимо разместить на последней строке данного блока.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This is a paragraph.
{: #an_id .a_class }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;приведет к следующему результату:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;an_id&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a_class&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This is a paragraph.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Единственное исключение &amp;mdash; заголовки. Для них допускается располагать список в той же строке.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;A setext style header {: #setext}&lt;/span&gt;
&lt;span class="gh"&gt;=================================&lt;/span&gt;

### A hash style header ### {: #hash }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;приведет к следующему:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;setext&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A setext style header&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hash&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A hash style header&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="_6"&gt;Строчные элементы&lt;/h5&gt;
&lt;p&gt;Чтобы определить атрибуты для строчных элементов, список атрибутов должен быть расположен непосредственно после такого элемента без пробельных символов&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[link](http://example.com){: class=&amp;quot;foo bar&amp;quot; title=&amp;quot;Some title!&amp;quot; }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;приведет к следующему:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://example.com&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foo bar&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Some title!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;link&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;h4 id="definition-lists"&gt;Definition Lists&lt;/h4&gt;
&lt;p&gt;Расширение добавляет возможность создавать список определений в документе Markdown. Включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Apple&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;Pomaceous&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;plants&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;genus&lt;/span&gt; &lt;span class="n"&gt;Malus&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; 
    &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt; &lt;span class="n"&gt;Rosaceae&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Orange&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;evergreen&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;genus&lt;/span&gt; &lt;span class="n"&gt;Citrus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет обработано так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dl&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Apple&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Pomaceous fruit of plants of the genus Malus in 
the family Rosaceae.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Orange&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The fruit of an evergreen tree of the genus Citrus.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;dl&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;h4 id="fenced-code-blocks"&gt;Fenced Code Blocks&lt;/h4&gt;
&lt;p&gt;Расширение добавляет дополнительный способ указания блоков кода, который преодолевает некоторые ограничения для блоков кода, заданных отступами.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This is a paragraph introducing:

~~~~~~~~~~~~~~~~~~~~
a one-line code block
~~~~~~~~~~~~~~~~~~~~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Заборчатый блок кода может иметь пустую строку в качестве первой или последней строки кода, а также может следовать немедленно после пункта списка, не становясь частью списка.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Внимание:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Заборчатые блоки кода поддерживаются только на уровне корня документа. Таким образом, их нельзя вложить в списки или цитаты&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Можно определить язык в блоке кода для использования при подсветке синтаксиса (или еще зачем-нибудь). Язык будет добавлен атрибутом класса выходному элементу &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;. То есть, вам следует определить язык, какой вам надо, в CSS-классе &lt;code&gt;.language&lt;/code&gt;. Для совместимости с синтаксисом markdown, язык можно &lt;em&gt;опционально&lt;/em&gt; заключить в фигурные скобки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~~~~{.python}
# python code
~~~~

~~~~.html
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;HTML Document&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
~~~~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;и из этого получится&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;# python code
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;p&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt;HTML Document&lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;/p&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Кроме того, поддерживается синтаксис в стиле GitHub с использованием обратных апострофов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;```python
# more python code
```
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если вам бы хотелось подсветить заборчатые блоки кода с помощью расширения CodeHilite, просто подключите это расширение (помните, что его зависимостью является модуль Pygments), и синтаксис языка в блоке кода будет подсвечиваться соответствующим образом.&lt;/p&gt;
&lt;p&gt;Подобно синтаксису с двоеточиями расширения CodeHilite, заборчатые блоки кода могут выделять определенные строки. Строки можно указать в стиле PHP Extra&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~~~~{.python hl_lines=&amp;quot;1 3&amp;quot;}
# This line is emphasized
# This line isn&amp;#39;t
# This line is emphasized
~~~~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;или в стиле GitHub&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;```python hl_lines=&amp;quot;1 3&amp;quot;
# This line is emphasized
# This line isn&amp;#39;t
# This line is emphasized
```
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes&lt;/h4&gt;
&lt;p&gt;Добавляет синтаксис для указания сносок в документах Markdown. Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Синтаксис сносок Python-Markdown в основном следует правилам, принятым в сообществе Markdown в целом и почти в точности соответствует реализации PHP Markdown Extra. Отличия касаются только некоторых тонкостей на выходе.&lt;/p&gt;
&lt;p&gt;Пример:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Footnotes[^1] have a label[^@#$%] and the footnote&amp;#39;s content.

[^1]: This is a footnote content.
[^@#$%]: A footnote on the label: &amp;quot;@#$%&amp;quot;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Метка сноски должна начинаться со знака вставки &lt;code&gt;^&lt;/code&gt; и может содержать любой строчный текст (включая пробелы) между квадратными скобками. Только первый символ знака вставки имеет специальное значение.&lt;/p&gt;
&lt;p&gt;Контент сноски должен начинаться с метки, за которой идет двоеточие и минимум один пробел. Метка, используемая для определения контента, должна в точности соответствовать метке, используемой в теле (включая регистр символов и пробелы). Контент может содержать несколько строк, абзацев, блоков кода и большинство других элементов синтаксиса Markdown. Дополнительные строки должны иметь отступ на один уровень (четыре пробела или один таб).&lt;/p&gt;
&lt;p&gt;При работе с несколькими блоками может быть полезно начинать контент с отдельной строки для метки, указывающей на контент. Благодаря такому способу у всего блока получаются единообразные отступы, и любые ошибки автору будет существенно проще заметить.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[^1]: 
    The first paragraph of the definition.

    Paragraph two of the definition.

    &amp;gt; A blockquote with
    &amp;gt; multiple lines.

        a code block

    A final paragraph.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для расширения доступны следующие опции настройки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PLACE_MARKER&lt;/code&gt;&lt;/strong&gt;: текстовая строка, используемая для отметки позиции, где будет отображаться сноска. По умолчанию &lt;code&gt;///Footnotes Go Here///&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Если текст маркера места не найден в документе, сноска будет размещена в конце результирующего &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-документа.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;UNIQUE_IDS&lt;/code&gt;&lt;/strong&gt;: Следует ли избегать коллизий через многократный вызов &lt;code&gt;reset()&lt;/code&gt; По умолчанию &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;BACKLINK_TEXT&lt;/code&gt;&lt;/strong&gt;: Текстовая строка, которая будет ссылкой от сноски обратно к позиции в документе. По умолчанию &lt;code&gt;&amp;amp;#8617&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tables"&gt;Tables&lt;/h4&gt;
&lt;p&gt;Добавляет возможность использования синтаксиса, установленного в PHP Markdown Extra.&lt;/p&gt;
&lt;p&gt;То есть, следующий текст (взятый из документации к упомянутой выше PHP Markdown Extra)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;First Header  | Second Header
------------- | -------------
Content Cell  | Content Cell
Content Cell  | Content Cell
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет отображен в виде &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;thead&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;First Header&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Second Header&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;thead&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Content Cell&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Content Cell&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Content Cell&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Content Cell&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tbody&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Примечание&lt;/dt&gt;
&lt;dd&gt;Для таблиц, созданных таким образом, хотелось бы иметь возможность задать стили оформления, желательно еще и разные в разных случаях. Это особенно важно потому, что блоки кода с включенной нумерацией страниц тоже используют таблицы: одна колонка для номеров, вторая &amp;mdash; для блока кода. Фильдиперстово стилизованные таблицы без указания класса могут попортить пример кода с нумерованными строками. Таким образом, хотелось бы разделить стили таблиц при помощи классов. Однако, использование расширения Attribute Lists с таблицами работает не так, как хотелось бы.  &lt;/dd&gt;
&lt;dt&gt;&amp;nbsp;&lt;/dt&gt;
&lt;dd&gt;Хотя таблица выглядит, как блочный элемент, она ведет себя не как блок, да еще и у нее есть подэлементы &amp;mdash; строки и столбцы. Поэтому &lt;code&gt;{: .styled_table }&lt;/code&gt;, написанное сразу после таблицы, будет применено не к &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, а к &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; &amp;mdash; пустому и специально для этой цели созданному. Мое решение (первое, что пришлов голову): втыкаю сразу перед таблицей строку &lt;code&gt;&amp;lt;div markdown="span" class="styled_table"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;, а в CSS-файле использую конструкции типа &lt;code&gt;.styled_table + table {..}&lt;/code&gt;, &lt;code&gt;.styled_table + table td {..}&lt;/code&gt;. Можно, конечно, воспользоваться и псевдоклассом &lt;code&gt;:not&lt;/code&gt;, но мой способ позволяет сделать разное оформление таблиц при необходимости.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 id="smart-strong"&gt;Smart Strong&lt;/h4&gt;
&lt;p&gt;Расширение добавляет более &amp;laquo;умную&amp;raquo; обработку двойных знаков подчеркивания внутри слова. Делает для двойных подчеркиваний то же, что smart_emphasis для одинарных. Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Пример использования в консоли Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;markdown&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Text with double__underscore__words.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
                      &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.smart_strong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;lt;p&amp;gt;Text with double__underscore__words.&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__Strong__ still works.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
                      &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.smart_strong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Strong&amp;lt;/strong&amp;gt; still works.&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;__this__works__too__.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
                      &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.smart_strong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;this__works__too&amp;lt;/strong&amp;gt;.&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;h4 id="extra_1"&gt;Extra &amp;mdash; заключение&lt;/h4&gt;
&lt;p&gt;Итак, расширение Extra &amp;mdash; это, по сути, комплект из семи расширений. Их можно подключить оптом, указав &lt;code&gt;markdown.extensions.extra&lt;/code&gt; в строке подключения, а можно и поштучно, указывая только имена действительно необходимых. Указать отдельные расширения в настройках может быть полезно еще и для того, чтобы передать им опции настройки, отличающиеся от опций по умолчанию.&lt;/p&gt;
&lt;p&gt;Однако, почему же в Pelican вся эта подборка работает сразу? Да еще и вместе с подсветкой синтаксиса, которая обеспечивается расширением CodeHilite, которое в Extra не входит? (Правда, для нормальной подсветки нужен еще и соответствующий CSS-файл, и если его нет, то код визуально подсвечен не будет, но ключевые слова в коде будут правильно обрамлены тегами &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; с разными классами для возможности применения разных стилей.)&lt;/p&gt;
&lt;p&gt;А все дело в файле конфигурации Pelican &amp;mdash; pelicanconf.py, в котором предусмотрена опция-переменная MD_EXTENSIONS: список расширений Markdown, которые будет использовать генератор сайта.&lt;/p&gt;
&lt;p&gt;И хотя в файле конфигурации, который создается в результате pelican-quickstart.py, эта опция не указана вообще, у нее есть значение по умолчанию, которое и применяется в таких случаях:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;MD_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;codehilite(css_class=highlight)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Как видно, расширение Extra включено изначально, а CodeHilite включено еще и с настройками. При желании их можно отключить, указав явным образом MD_EXTENSIONS с пустыми квадратными скобками. А можно добавить еще какие-нибудь расширения, но тогда надо обязательно указать и те, что включены по умолчанию, потому что опция MD_EXTENSIONS их перекрывает и заменяет.&lt;/p&gt;
&lt;p&gt;Кроме того надо заметить, что при указании имени расширения в опции оставлена только последняя составляющая. Предполагаю, это сделано потому, что в коде Pelican уже указан &lt;code&gt;import markdown.extentions&lt;/code&gt;. Впрочем, для блоггера причины этой удобной особенности неважны, можно просто писать имя самого расширения без префиксов.&lt;/p&gt;
&lt;h3 id="admonition"&gt;Admonition&lt;/h3&gt;
&lt;p&gt;Расширение добавляет в Markdown-документ замечания в стиле rST. Включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Замечание создается с использованием следующего синтаксиса:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;!!! type &amp;quot;optional explicit title within double quotes&amp;quot;
    Any number of other indented markdown elements.

    This is the second paragraph.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;type&lt;/code&gt; будет использоваться в имени класса CSS и в качестве заголовка по умолчанию. Это должно быть одно слово. Так, например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;!!! note
    You should note that the title will be automatically capitalized.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет переделано так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;admonition note&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;admonition-title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Note&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You should note that the title will be automatically capitalized.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Опционально вы можете добавить заголовок. Например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;!!! danger &amp;quot;Don&amp;#39;t try this at home&amp;quot;
    ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;сделает&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;admonition danger&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;admonition-title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Don&amp;#39;t try this at home&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если вы хотите совсем избавиться от заголовка, используйте пустую строку между кавычек: из&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;!!! important &amp;quot;&amp;quot;
    This is a admonition box without a title.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;получится&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;admonition important&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a admonition box without a title.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;rST предполагает использование следующих типов: attention, caution, danger, error, hint, important, note, tip, warning. Однако, вы вольны использовать всё, что хотите.&lt;/p&gt;
&lt;p&gt;В состав расширения не входит никаких CSS-файлов. Придется делать их самостоятельно, можете посмотреть тему &lt;a href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt;, если вам нужно вдохновение.&lt;/p&gt;
&lt;h3 id="codehilite"&gt;CodeHilite&lt;/h3&gt;
&lt;p&gt;Расширение добавляет подсветку синтаксиса к стандартным блокам кода Python-Markdown с использованием Pygments. Расширение включено в стандартную библиотеку Markdown. &lt;/p&gt;
&lt;p&gt;Для его использования необходимо также скачать и установить модуль Pygments. Впрочем, при установке Pelican это произошло само собой: pip поставил модуль, так как он входит в список зависимостей. Но в документации на Markdown об этом, конечно, не сказано, ведь его можно использовать не только в Pelican.&lt;/p&gt;
&lt;p&gt;Вам надо определить подходящие классы CSS и создать подходящие правила для них &amp;mdash; подобрать (сделать самостоятельно, раздобыть или поручить эту работу модулю Pygments) CSS-файл и подключить его в заголовке ваших &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-шаблонов. На эту тему есть замечательная &lt;a href="http://pygments.org/docs"&gt;документация&lt;/a&gt;, где описаны детали. Если вы не указали язык, Pygments попытается догадаться самостоятельно. Если у него это не получится, блок кода останется без подсветки.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Имейте в виду:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;CSS и/или JavaScript не включены в виде части данного расширения, но должны быть обеспечены пользователем. Проект Pygments предоставляет стили CSS по умолчанию, и они могут оказаться полезными поначалу.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Расширение CodeHilite следует тем же правилам синтаксиса, что и обычные блоки кода Markdown, с одним исключением. Подсвечивателю нужно знать, какой язык используется для блока кода. Есть три способа рассказать подсвечивателю, какой язык содержит блок, и каждый имеет отличающийся результат.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Имейте в виду:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Формат идентификатора языка действует на нумерацию строк только в том случае, если &lt;code&gt;linenums&lt;/code&gt; установлено в &lt;code&gt;None&lt;/code&gt; (по умолчанию). Если его значение &lt;code&gt;True&lt;/code&gt; или &lt;code&gt;False&lt;/code&gt;, то формат идентификатора не влияет на показ номера строки &amp;mdash; он служит только для определения языка в блоке кода&lt;/dd&gt;
&lt;/dl&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Знак начала сценария &lt;code&gt;#!&lt;/code&gt; (с путем)&lt;/p&gt;
&lt;p&gt;Если в первой строке блок кода содержит знак начала сценария, язык извлекается из этой строки и номера строк ставятся.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;    #!/usr/bin/python
    # Code goes here ...
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="c1"&gt;# Code goes here ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Знак начала сценария &lt;code&gt;#!&lt;/code&gt; (без пути)&lt;/p&gt;
&lt;p&gt;Если в первая строка блока кода содержит знак начала сценария, однако не содержит путь (одиночный / или даже пробел), эта строка будет удалена из кода перед обработкой. Номера строк ставятся.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ch"&gt;#!python&lt;/span&gt;
&lt;span class="c1"&gt;# Code goes here ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Code goes here ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Двоеточия&lt;/p&gt;
&lt;p&gt;Если первая строка начинается с трех или более двоеточий, текст, следующий за двоеточиями, идентифицирует язык. Первая строка удаляется из блока кода перед обработкой, номера строк не ставятся.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;    :::python
    # Code goes here ...
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Code goes here ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;При помощи синтаксиса с двоеточиями можно выделить определенные строки. При использовании CSS-стилей Pygments у выделяемых линий фон желтый. Это полезно для привлечения внимания читателя к отдельным линиям.&lt;/p&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;    :::python hl_lines=&amp;quot;1 3&amp;quot;
    # This line is emphasized
    # This line isn&amp;#39;t
    # This line is emphasized
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="hll"&gt;&lt;span class="c1"&gt;# This line is emphasized&lt;/span&gt;
&lt;/span&gt;&lt;span class="c1"&gt;# This line isn&amp;#39;t&lt;/span&gt;
&lt;span class="hll"&gt;&lt;span class="c1"&gt;# This line is emphasized&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Имейте в виду:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;hl_lines&lt;/code&gt; называется опция Pygments &amp;ldquo;highlighted lines&amp;rdquo;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;CodeHilite имеет полную обратную совместимость в том плане, что если встретившийся блок кода внезапно окажется без определения языка, такой блок просто будет обернут тегами &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; и выдан так.&lt;/p&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;    # Code goes here ...
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# Code goes here ...
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;а код страницы в этом месте будет выглядеть так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;codehilite&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;# Code goes here ...
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Имейте в виду:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Если язык не будет определен, движок подсветки Pygments попытается догадаться сам (если только &lt;code&gt;quess_lang&lt;/code&gt; не установлен в &lt;code&gt;False&lt;/code&gt;). А если у него не получится, тогда будет такое поведение, как описано выше.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Для расширения доступны следующие опции настройки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;linenums&lt;/code&gt;&lt;/strong&gt;: Использовать нумерацию строк. Возможные значения: &lt;code&gt;True&lt;/code&gt; (да), &lt;code&gt;False&lt;/code&gt; (нет) и &lt;code&gt;None (авто)&lt;/code&gt;. Значение по умолчанию &amp;mdash; &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Использование &lt;code&gt;True&lt;/code&gt; включает нумерацию строк для всех блоков кода, даже если язык в них обозначен с использованием двоеточий (:::).&lt;/p&gt;
&lt;p&gt;Использование &lt;code&gt;False&lt;/code&gt; отключает нумерацию строк, даже при использовании знака начала сценария (#!) для указания языка.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;guess_lang&lt;/code&gt;&lt;/strong&gt;: Автоматическое определение языка. По умолчанию &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Использование &lt;code&gt;False&lt;/code&gt; предотвращает попытки Pygments угадать язык, таким образом, будут подсвечиваться только блоки с явным указанием языка.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;css_class&lt;/code&gt;&lt;/strong&gt;: Устанавливает имя класса CSS для оборачивающего тега &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. По умолчанию &lt;code&gt;codehilite&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;pygments_style&lt;/code&gt;&lt;/strong&gt;: Стиль форматирования Pygments &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt; (ColorSheme). По умолчанию &lt;code&gt;default&lt;/code&gt;.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Имейте в виду:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Эта опция полезна только в том случае, если &lt;code&gt;noclasses&lt;/code&gt; установлена в &lt;code&gt;True&lt;/code&gt;, иначе пользователь должен обеспечить наличие CSS-стилей.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;noclasses&lt;/code&gt;&lt;/strong&gt;: Использовать встроенные стили вместо классов CSS. По умолчанию &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;use_pygments&lt;/code&gt;&lt;/strong&gt;: По умолчанию &lt;code&gt;True&lt;/code&gt;. Установите в &lt;code&gt;False&lt;/code&gt;, чтобы отключить использование Pygments. Если для блока кода определен язык, он будет присвоен в качестве класса для тега &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;, как предлагается спецификацией HTML5 (альтернативный вывод не будет учитываться) и может быть использован в библиотеке JavaScript в браузере для подсветки блока кода.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="headerid"&gt;HeaderId&lt;/h3&gt;
&lt;p&gt;Расширение автоматически генерирует атрибут &lt;code&gt;id&lt;/code&gt; для элементов заголовков (h1 &amp;ndash; h6) в результирующем &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-документе.&lt;/p&gt;
&lt;p&gt;Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Внимание!&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Это расширение рассматривается, как не рекомендуемое. Вместо него следует использовать расширение Table of Contents, которое предлагает большинство возможностей этого расширения, а также дополнительные.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;По умолчанию все заголовки автоматически получат атрибут &lt;code&gt;id&lt;/code&gt;, сгенерированный на основе текста заголовка (ниже описано, как это отключить). Посмотрите пример, в котором все три заголовка должны бы иметь одинаковый &lt;code&gt;id&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#Header
#Header
#Header
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;выдаст в результате&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header_1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header_2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для расширения доступны следующие опции настройки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;level&lt;/code&gt;&lt;/strong&gt;: Базовый уровень для заголовков.&lt;/p&gt;
&lt;p&gt;По умолчанию &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;level&lt;/code&gt; позволяет вам автоматически подстроить уровни заголовков для их соответствия вашим &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-шаблонам. Например, допустим, markdown-текст на странице не должен содержать заголовков уровня выше третьего (&lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;). Ниже показано, как этого добиться:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;... #Some Header&lt;/span&gt;
&lt;span class="s1"&gt;... ## Next Level&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions.headerid&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HeaderIdExtension&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HeaderIdExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;some_header&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Some&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h4&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;next_level&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="n"&gt;Level&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;forceid&lt;/code&gt;&lt;/strong&gt;: Вынуждает все заголовки получить &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;По умолчанию &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;forceid&lt;/code&gt; включает или выключает автоматическую генерацию &lt;code&gt;id&lt;/code&gt; для заголовков, которые не имеют таковых, указанных явным образом (с использованием расширения Attribute Lists).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; text = &amp;#39;&amp;#39;&amp;#39;
... # Some Header
... # Header with ID # { #foo }&amp;#39;&amp;#39;&amp;#39;
&amp;gt;&amp;gt;&amp;gt; html = markdown.markdown(text,
                  extensions=[&amp;#39;markdown.extensions.attr_list&amp;#39;,
                              HeaderIdExtension(forceid=False)])
&amp;gt;&amp;gt;&amp;gt; print html
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Some Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header with ID&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/strong&gt;: Разделитель слов. Символ, которым будут заменены пробелы в id.&lt;/p&gt;
&lt;p&gt;По умолчанию &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;slugify&lt;/code&gt;&lt;/strong&gt;: Callable (вызываемый объект) для генерации якорей (anchors).&lt;/p&gt;
&lt;p&gt;По умолчанию &lt;code&gt;markdown.extensions.headerid.slugify&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Если вы желаете использовать иной алгоритм для определения id, можете сделать свой Callable, который принимает два аргумента:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: строка для преобразования в slug&lt;/li&gt;
&lt;li&gt;&lt;code&gt;separator&lt;/code&gt;: разделитель слов&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;slug &amp;mdash; труднопереводимое слово. Однозначного аналога на русском не нашел. Суть примерно в том, что из некоей строки иногда требуется сделать последовательность символов, в которой можно узнать исходную строку, но при этом нужно исключить любые символы, вызывающие трудности в обработке, начиная со служебных (типа пробелов и слэшей) и заканчивая символами сложных алфавитов, той же кириллицы. Например для строки &amp;laquo;Привет, мир!&amp;raquo; получится slag &amp;laquo;privet_mir&amp;raquo;, или &amp;laquo;hello_world_&amp;raquo;. Это может быть полезно при генерации имен, которые должны удовлетворять определенным требованиям к составу символов, например, имен файлов, и чаще всего используется при формировании частей человекопонятных интернет-адресов.&lt;/p&gt;
&lt;p&gt;Расширение HeaderId поддерживает расширение Meta-Data. Пожалуйста, посмотрите документацию для этого расширения. Поддерживаемые ключевые слова meta-data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;header_level&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header_forceid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;При использовании meta-data перекроет настройки, установленные интерфейсом &lt;code&gt;extension_configs&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;header_level&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;header_forceid&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Off&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;приведет в результате к такому выводу:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;A Header&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="meta-data"&gt;Meta-Data&lt;/h3&gt;
&lt;p&gt;Расширение добавляет синтаксис для определения метаданных документа. Написано под влиянием MultiMarkdown и следует правилам его синтаксиса. В настоящее время это расширение не использует метаданных каким-либо образом, а просто предоставляет свойство &lt;code&gt;Meta&lt;/code&gt; экземпляра класса Markdown для использования другими расширениями или напрямую в коде на Python.&lt;/p&gt;
&lt;p&gt;Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Метаданные состоят из набора ключевых слов и значений, указанных в начале документа Markdown примерно так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;Document&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;brief&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Waylan&lt;/span&gt; &lt;span class="n"&gt;Limberg&lt;/span&gt;
         &lt;span class="n"&gt;John&lt;/span&gt; &lt;span class="n"&gt;Doe&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;October&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2007&lt;/span&gt;
&lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;base_url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;paragraph&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ключевые слова регистрозависимы и могут состоять из букв, цифр, символов подчеркивания и точек и должны завершаться двоеточием. Значения состоят из чего угодно, следующего за двоеточием на этой же строке, и даже может быть пустым.&lt;/p&gt;
&lt;p&gt;Если строка имеет отступ на 4 или больше пробелов, она рассматривается как дополнительная строка значения предыдущего ключевого слова. У ключевого слова может быть столько строк, сколько хотите.&lt;/p&gt;
&lt;p&gt;Первая пустая строка заканчивает все метаданные документа. Таким образом, первая строка документа не должна быть пустой.&lt;/p&gt;
&lt;p&gt;С другой стороны, вы можете использовать разделители в YAML-стиле чтобы отметить начало и конец метаданных. В этом случае, первая строка документа должна быть &lt;code&gt;--&lt;/code&gt;. Метаданные заканчиваются на первой пустой строке или первой строке, содержащей конечный разделитель (&lt;code&gt;---&lt;/code&gt; или &lt;code&gt;...&lt;/code&gt;), смотря что встретиться раньше. Хотя YAML-разделители и поддерживаются, метаданные не анализируются, как YAML.&lt;/p&gt;
&lt;p&gt;Все метаданные удаляются из документа перед дальнейшей обработкой программой Markdown.&lt;/p&gt;
&lt;p&gt;Метаданные доступны в виде Python-типа данных Dict в свойстве &lt;code&gt;Meta&lt;/code&gt; экземпляра класса Markdown. Пример использования с документом, приведенным выше:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; md = markdown.Markdown(extensions = [&amp;#39;markdown.extensions.meta&amp;#39;])
&amp;gt;&amp;gt;&amp;gt; html = md.convert(text)
&amp;gt;&amp;gt;&amp;gt; # Meta-data has been stripped from output
&amp;gt;&amp;gt;&amp;gt; print html
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is the first paragraph of the document.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&amp;gt;&amp;gt;&amp;gt; # View meta-data
&amp;gt;&amp;gt;&amp;gt; print md.Meta
{
&amp;#39;title&amp;#39; : [&amp;#39;My Document&amp;#39;],
&amp;#39;summary&amp;#39; : [&amp;#39;A brief description of my document.&amp;#39;],
&amp;#39;authors&amp;#39; : [&amp;#39;Waylan Limberg&amp;#39;, &amp;#39;John Doe&amp;#39;],
&amp;#39;date&amp;#39; : [&amp;#39;October 2, 2007&amp;#39;],
&amp;#39;blank-value&amp;#39; : [&amp;#39;&amp;#39;],
&amp;#39;base_url&amp;#39; : [&amp;#39;http://example.com&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Обратите внимание, что ключевые слова все в нижнем регистре, а значения состоят из списка строк, в котором каждая строка &amp;mdash; отдельная строка значения этого ключа в исходном документе. Таким образом, можно сохранить разрывы строк, если хотите. Либо элементы списка можно объединить, где это уместно. Никаких предположений относительно данных не делается, они просто передаются свойству &lt;code&gt;Meta&lt;/code&gt; в том виде, в каком обнаружены.&lt;/p&gt;
&lt;p&gt;Пожалуй, метаданные можно передать в систему шаблонов, либо использовать в различных расширениях Markdown. Эти возможности оставлены фантазии разработчика.&lt;/p&gt;
&lt;p&gt;Следующие расширения в настоящее время могут работать с расширением Meta-Data. Также перечислены поддерживаемые ключевые слова:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HeaderId&lt;ul&gt;
&lt;li&gt;header_level&lt;/li&gt;
&lt;li&gt;header_forceid&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WikiLinks&lt;ul&gt;
&lt;li&gt;wiki_base_url&lt;/li&gt;
&lt;li&gt;wikw_end_url&lt;/li&gt;
&lt;li&gt;wiki_html_class&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-line-to-break-extension"&gt;New-Line-to-Break Extension&lt;/h3&gt;
&lt;p&gt;Расширение будет обрабатывать новые строки с использованием тега переноса строки, подобно тому, как это сделано в реализациях Markdown на StackOverflow и GitHub. Пример:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;markdown&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;laquo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;laquo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;markdown.extensions.nl2br&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;br&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;h3 id="sane-lists"&gt;Sane Lists&lt;/h3&gt;
&lt;p&gt;Расширение изменяет поведение синтаксиса списков Markdown так, чтобы они вызывали меньше удивления, или, скажем так, были более предсказуемыми.&lt;/p&gt;
&lt;p&gt;Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Sane Lists не разрешает использование смешанных типов списков. Иными словами, нумерованный список не будет продолжаться, если встретится пункт маркированного списка и наоборот. Например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1. Ordered item 1
2. Ordered item 2

* Unordered item 1
* Unordered item 2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;приведет к такому результату:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Ordered item 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Ordered item 2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Unordered item 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Unordered item 2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;в то время как поведение Markdown по умолчанию сгенерировало бы маркированный список.&lt;/p&gt;
&lt;p&gt;Странно. В документации написано &lt;code&gt;Whereas the default Markdown behavior would be to generate an unordered list.&lt;/code&gt;, а получается вовсе даже нумерованный:&lt;/p&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;1. Ordered item 1
2. Ordered item 2

* Unordered item 1
* Unordered item 2
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;ol&gt;
&lt;li&gt;Ordered item 1&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ordered item 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unordered item 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Unordered item 2&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Имейте в виду, что в отличие от поведения Markdown по умолчанию, если между пунктами строки нет пустой строки, другой тип списка игнорируется полностью. Это соответствует поведению абзацев. Например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;A Paragraph.
* Not a list item.

1. Ordered list item.
* Not a separate list item.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;При подключенном расширении получится такой результат:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A Paragraph.
* Not a list item.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Ordered list item.
  * Not a separate list item.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Во всех остальных случаях Sane Lists должно вести себя так же, как нормальные списки Markdown.&lt;/p&gt;
&lt;p&gt;Расширение не требует особых опций настройки.&lt;/p&gt;
&lt;h3 id="smartypants"&gt;SmartyPants&lt;/h3&gt;
&lt;p&gt;Расширение преобразует ASCII-символы тире, кавычек и многоточия в соответствующие &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-объекты&lt;/p&gt;
&lt;div class="colortable"&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ASCII-символ&lt;/th&gt;
&lt;th&gt;Замена&lt;/th&gt;
&lt;th&gt;&lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-объект&lt;/th&gt;
&lt;th&gt;Заменяющие ключи&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;'&lt;/td&gt;
&lt;td&gt;&amp;lsquo; &amp;rsquo;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;lsquo; &amp;amp;rsquo;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;'left-single-quote', 'right-single-quote'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;"&lt;/td&gt;
&lt;td&gt;&amp;ldquo; &amp;rdquo;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;ldquo; &amp;amp;rdquo;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;'left-double-quote', 'right-double-quote'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&amp;zwnj;&amp;lt; &gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;&amp;laquo; &amp;raquo;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;laquo; &amp;amp;raquo;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;'left-angle-quote', 'right-angle-quote'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;hellip;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;'ellipsis'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;ndash;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;'ndash'&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;mdash;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;'mdash'&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Используя опцию настройки &lt;code&gt;substitutions&lt;/code&gt;, вы можете перекрыть замены по умолчанию. Просто передайте отображение (mapping) словарика ключей для заменяющих строк.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Примечание&lt;/dt&gt;
&lt;dd&gt;прямые кавычки &amp;mdash; одиночная и парная &amp;mdash; закрываются от этого расширения обратным слэшем. Закрывающие угловые скобки &amp;mdash; тоже, причем, хоть обе, хоть только первая. Точки многоточия можно экранировать хоть каждую. А вот открывающие угловые скобки от преобразования в текст обратным слэшем не закрываются. Похоже, чтобы не заключать их в блок кода, их можно разделить символом нулевой длины &lt;code&gt;&amp;amp;zwnj;&lt;/code&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Например, можно использовать следующую конфигурацию, чтобы получить правильные кавычки по-немецки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;extension_configs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.smarty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;substitutions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;left-single-quote&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;sbquo;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# sb is not a typo!&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;right-single-quote&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;lsquo;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;left-double-quote&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;bdquo;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;right-double-quote&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;ldquo;&amp;#39;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Имейте в виду:&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Это расширение повторно реализует Python-библиотеку SmartyPants, включая ее в анализатор Markdown. Хотя оно не предоставляет никаких дополнительных особенностей, оно предлагает несколько преимуществ. В особенности, оно не будет пытаться работать в подсвечиваемых блоках кода (при использовании CodeHilite) подобно аналогичным библиотекам третьих сторон.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Для расширения доступны следующие опции настройки:&lt;/p&gt;
&lt;div class="colortable"&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Default value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;smart_dashes&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;преобразовывать тире&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smart_quotes&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;преобразовывать прямые кавычки&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smart_angled_quotes&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;преобразовывать угловые кавычки&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smart_ellipses&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;td&gt;преобразовывать многоточия&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;substitutions&lt;/td&gt;
&lt;td&gt;{}&lt;/td&gt;
&lt;td&gt;перезаписывает замены по умолчанию&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Расширение SmartyPants основано не изначальной реализации SmartyPants Джона Грубера. Для получения информации о деталях почитайте &lt;a href="http://daringfireball.net/projects/smartypants/"&gt;документацию&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="table-of-contents"&gt;Table of Contents&lt;/h3&gt;
&lt;p&gt;Расширение создает содержание документа Markdown и добавляет его в результирующий &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-документ.&lt;/p&gt;
&lt;p&gt;Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;По умолчанию все заголовки автоматически получают уникальный атрибут &lt;code&gt;id&lt;/code&gt;, генерируемый на основе текста заголовка. Обратите внимание, в следующем примере все заголовки должны бы иметь одинаковый &lt;code&gt;id&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#Header
#Header
#Header
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Получится так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header_1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header_2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Поместите маркер  в документе в том месте, где вам бы хотелось видеть содержание. Тогда вложенный список всех заголовков документа заменит этот маркер. Маркер по умолчанию &lt;code&gt;[TOC]&lt;/code&gt;, так что следующий документ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[TOC]&lt;/span&gt;

&lt;span class="c1"&gt;# Header 1&lt;/span&gt;

&lt;span class="c1"&gt;## Header 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет преобразован в такое:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;toc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#header-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Header 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#header-2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Header 2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Header 1&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header-2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Header 2&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Независимо от того, где в документе обнаружен &lt;code&gt;маркер&lt;/code&gt; (или отключен), содержание доступно в свойстве &lt;code&gt;toc&lt;/code&gt; класса Markdown. Это позволяет вставлять содержание в любое место шаблона страницы. Например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; md = markdown.Markdown(extensions=[&amp;#39;markdown.extensions.toc&amp;#39;])
&amp;gt;&amp;gt;&amp;gt; html = md.convert(text)
&amp;gt;&amp;gt;&amp;gt; page = render_some_template(context={&amp;#39;body&amp;#39;: html, &amp;#39;toc&amp;#39;: md.toc})
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для расширения доступны следующие опции настройки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;marker&lt;/code&gt;&lt;/strong&gt;: Текст, который будет заменен на содержание. По умолчанию &lt;code&gt;[TOC]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Установите в пустую строку, чтобы отключить поиск маркера, что может сэкономить немного времени, особенно в больших документах.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;title&lt;/code&gt;&lt;/strong&gt;: Атрибут &lt;code&gt;title&lt;/code&gt;, который будет добавлен блоку &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; содержания. По умолчанию &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;anchorlink&lt;/code&gt;&lt;/strong&gt;: Установите в &lt;code&gt;True&lt;/code&gt;, чтобы все заголовки получили ссылку сами на себя. По умолчанию &lt;code&gt;False&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;permalink&lt;/code&gt;&lt;/strong&gt;: Установите в &lt;code&gt;True&lt;/code&gt; или строку, чтобы сгенерировать постоянную ссылку в конце каждого заголовка. Полезно для страниц в стиле Sphinx.&lt;/p&gt;
&lt;p&gt;Если установлено в &lt;code&gt;True&lt;/code&gt;, в качестве текста ссылки будет использован символ абзаца (¶ or &lt;code&gt;&amp;amp;para;&lt;/code&gt;). Если установить строку, она будет использоваться в качестве текста ссылки.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;baselevel&lt;/code&gt;&lt;/strong&gt;: Базовый уровень для заголовков. По умолчанию &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Настройка &lt;code&gt;baselevel&lt;/code&gt; позволяет автоматически подогнать уровни заголовков к иерархии шаблонов &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;. Например, предположим, что страница текста Markdown не должна содержать заголовков уровня выше 3 (&lt;code&gt;&amp;lt;h&amp;gt;&lt;/code&gt;). Следующий пример показывает, как это сделать:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;... #Some Header&lt;/span&gt;
&lt;span class="s1"&gt;... ## Next Level&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions.toc&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TocExtension&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TocExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;baselevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;some_header&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Some&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h4&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;next_level&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Next&lt;/span&gt; &lt;span class="n"&gt;Level&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;slugify&lt;/code&gt;&lt;/strong&gt;: Вызываемый объект для генерации якорей (anchors)&lt;/p&gt;
&lt;p&gt;По умолчанию &lt;code&gt;markdown.extensions.headerid.slugify&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Если вы желаете использовать иной алгоритм для определения id, можете сделать свой Callable, который принимает два аргумента:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: строка для преобразования в slug&lt;/li&gt;
&lt;li&gt;&lt;code&gt;separator&lt;/code&gt;: разделитель слов&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/strong&gt;: Разделитель слов. Символ, который заменяет пробелы в &lt;code&gt;id&lt;/code&gt;. По умолчанию &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;dl&gt;
&lt;dt&gt;Примечание&lt;/dt&gt;
&lt;dd&gt;Если перед маркером &lt;code&gt;[TOC]&lt;/code&gt; вставить заголовок содержания, оформив его в виде заголовка, например, &lt;code&gt;## Содержание&lt;/code&gt;, то этот заголовок будет тоже вставлен в содержание, придавая ему вполне дурацкий вид. Поэтому обозначить TOC надо как-то иначе, либо тупо выделением &lt;code&gt;**Оглавление**&lt;/code&gt;, либо обозначив абзацу с псевдозаголовком собственный класс (при помощи Attribute Lists), для которого можно нарисовать красивое (или такое же, как у остальных заголовков) оформление в CSS-файле.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id="wikilinks"&gt;WikiLinks&lt;/h3&gt;
&lt;p&gt;Расширение добавляет поддержку WikiLinks.  А именно, любое слово [[в скобках]] будет преобразовано в ссылку.&lt;/p&gt;
&lt;p&gt;Расширение включено в стандартную библиотеку Markdown.&lt;/p&gt;
&lt;p&gt;Слово [[в скобках]] &amp;mdash; это любая комбинация букв в верхнем и нижнем регистре, цифр, дефисов, подчеркиваний и пробелов, окруженных двойными квадратными скобками. То есть,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[[Bracketed]]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет преобразовано в&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Bracketed/&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wikilink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Bracketed&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Имейте в виду, что WikiLinks автоматически присваивает &lt;code&gt;class="wikilink"&lt;/code&gt;, что упрощает применение стиля WikiLinks, отличающегося от других ссылок на странице, если  это желательно. Смотрите ниже, как изменить этот класс.&lt;/p&gt;
&lt;p&gt;Кроме того, если используются пробелы, они будут преобразованы в символ подчеркивания в ссылке, но оставлены как есть в тексте ссылки. Наверное, этот пример проиллюстрирует лучше:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;Wiki&lt;/span&gt; &lt;span class="n"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;станет&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Wiki_Link/&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wikilink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Wiki Link&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Поведением по умолчанию является указание каждой ссылки на корневой каталог документа в текущем домене и закрывать слэшем. Дополнительно, каждой ссылке присваивается &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-класс &lt;code&gt;wikilink&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Для расширения доступны следующие опции настройки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;base_url&lt;/code&gt;&lt;/strong&gt;: Строка для добавления в начале URL. По умолчанию &lt;code&gt;/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;end_url&lt;/code&gt;&lt;/strong&gt;: Строка для добавления в конце URL. По умолчанию &lt;code&gt;/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;html_class&lt;/code&gt;&lt;/strong&gt;: CSS-класс. Оставьте пустым, чтобы не использовать никакой. По умолчанию &lt;code&gt;wikilink&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;build_url&lt;/code&gt;&lt;/strong&gt;: Вызываемый объект, который формирует URL из его частей.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Например, давайте предположим, что ссылки должны всегда указывать на подкаталог &lt;code&gt;/wiki/&lt;/code&gt; и заканчиваться на &lt;code&gt;.html&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions.wikilinks&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WikiLinkExtension&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;WikiLinkExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/wiki/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Вышеприведенное в результате сделает такие ссылки из [[WikiLink]]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/wiki/WikiLink.html&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wikilink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;WikiLink&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если вы хотите нечто большее, чем просто изменить начало и/или конец URL, вы можете также сделать вызываемый объект, который должен принимать три аргумента (&lt;code&gt;label&lt;/code&gt;, &lt;code&gt;base&lt;/code&gt; и &lt;code&gt;end&lt;/code&gt;). Этот объект должен возвращать URL целиком.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; def my_url_builder(label, base, end):
...    # do stuff
...    return url
...
&amp;gt;&amp;gt;&amp;gt; html = markdown.markdown(text,
...     extensions=[WikiLinkExtension(build_url=my_url_builder)],
... )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Также предоставляется опция для изменения или удаления атрибута class.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; html = markdown.markdown(text,
...     extensions=[WikiLinkExtension(html_class=&amp;#39;myclass&amp;#39;)]
... )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;приведет к присвоению Wiki-ссылкам класса &lt;code&gt;myclass&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/WikiLink/&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;myclass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;WikiLink&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Данное расширение также поддерживает расширение Meta-Data. Пожалуйста, посмотрите его документацию насчет особенностей применения. Поддерживаются такие ключевые слова метаданных:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wiki_base_url&lt;/li&gt;
&lt;li&gt;wiki_end_url&lt;/li&gt;
&lt;li&gt;wiki_html_class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Если используются метаданные, они будут перекрывать установки, предоставляемые интерфейсом &lt;code&gt;extension_configs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Документ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;wiki_base_url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;wiki_end_url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;html&lt;/span&gt;
&lt;span class="n"&gt;wiki_html_class&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;WikiLink&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;paragraph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;будет переделан в такой результат (обратите внимание на пустой &lt;code&gt;wiki_html_class&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;A &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://example.com/WikiLink.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;WikiLink&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; in the first paragraph.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_7"&gt;Заключение&lt;/h2&gt;
&lt;p&gt;Итак, теперь примерно понятно, что за зверь &amp;mdash; Markdown, как с ним дружить, как его использовать и настраивать, а также выйти за рамки стандартных возможностей при помощи расширений.&lt;/p&gt;
&lt;p&gt;Что касается расширений:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extra должно быть подключено обязательно. Не зря оно включено по умолчанию, оно обеспечивает в том числе базовую функциональность.&lt;/li&gt;
&lt;li&gt;CodeHilite однозначно необходимо, если есть желание поделиться на своих страницах примерами кода. Правда, подсветка синтаксиса &amp;mdash; выбор темы, настройка отображения и все такое &amp;mdash; тема отдельного разговора.&lt;/li&gt;
&lt;li&gt;Table of Contents чрезвычайно полезно, если страница получилась довольно длинной и содержит порядочное количество глав под заголовками. Причем, содержание можно вынести даже в сайдбар или футер, если воспользоваться свойством md.toc объекта Markdown и вставить его в шаблон в нужном месте, используя синтаксис jinja2, но это тоже тема отдельного разговора.&lt;/li&gt;
&lt;li&gt;SmartyPants очень удобно, если есть желание привести знаки препинания к виду, принятому в отечественной типографике &amp;mdash; длинные тире, кавычки-&amp;laquo;елочки&amp;raquo;. Без этого расширения придется либо сразу вбивать в тексте &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt;-спецсимволы, либо делать соответствующие замены в своем редакторе после написания статьи.&lt;/li&gt;
&lt;li&gt;Остальные расширения из числа стандартных, на мой взгляд, весьма условно полезны. А Meta-Data вообще полезна скорее программисту, чем пользователю, и может пригодиться разве что при разработке своих расширений.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Стало быть, в файле настройки Pelican &lt;code&gt;pelicanconf.py&lt;/code&gt; следует добавить строку&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;MD_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;codehilite(css_class=highlight)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smarty(smart_angled_quotes=True)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(может быть, еще туда же admonition, sane_lists и nl2br при желании), и, применяя полученные из документации знания, наслаждаться результатом.&lt;/p&gt;
&lt;p&gt;И еще один момент, связанный с отличиями CMS от статического сайта, собранного генератором: если для CMS можно писать контент где угодно, потом откуда угодно забросить его в базу сайта, внешний вид страниц не будет зависеть от местоположения автора. Если же написать статью и запустить сборку сайта дома, на компьютере, а потом продолжить заниматься этим, скажем, в отпуске, пользуясь ноутбуком и гостиничным вайфаем, надо сначала убедиться, что конфигурация Pelican на домашнем компьютере и ноутбуке совпадают. То есть, версии Python одинаковые, модули установлены одинаковые и одинаковых версий, темы сайта одинаковые, файлы настройки pelicanconf.py и publishconf.py совпадают. И, конечно же, все остальные материалы сайта присутствуют на обеих вычислительных машинах в полном объеме. Это не проблема, сегодня нетрудно синхронизировать информацию на разных устройствах по сети, а наполнять сайт без сети все равно не получится. Однако, об этом тоже надо не забывать.&lt;/p&gt;</summary><category term="pelican"></category><category term="markdown"></category></entry><entry><title>Pelican и использование Markdown</title><link href="http://romeogolf.site/pelican-i-ispolzovanie-markdown.html" rel="alternate"></link><updated>2016-01-27T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-27:pelican-i-ispolzovanie-markdown.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Содержание&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;Зачем Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2"&gt;Простые примеры&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#2_1"&gt;Заголовки&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2_2"&gt;Горизонтальные линии&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2_3"&gt;Таблицы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2_4"&gt;Абзацы и внутристрочные элементы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2_5"&gt;Блочная разметка: цитаты и блоки кода&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2_6"&gt;Списки&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2_7"&gt;Ссылки, картинки и их комбинация&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;Некоторые особенности и тонкости&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="1"&gt;Зачем Markdown&lt;/h2&gt;
&lt;p&gt;Строго говоря, написанное под этим заголовком существенной частью относится и к reStructuredText, но беглый взгляд на два текста, написанных в этих форматах, лично меня склонил именно к .md, хотя и пришлось ставить дополнительный модуль для Python.&lt;/p&gt;
&lt;p&gt;Markdown &amp;mdash; упрощенный (или облегченный) язык разметки. В отличие от, скажем, HTML, который тоже язык разметки, но не упрощенный и не облегченный, Markdown сам по себе практически не используется, а служит промежуточным &amp;laquo;буфером&amp;raquo; для последующего преобразования в другой язык, который будет отображаться, в нашем случае &amp;mdash; в HTML, но можно и в Rich Text, XML или еще куда-нибудь.&lt;/p&gt;
&lt;p&gt;Markdown хорош тем, что с его использованием писать статью существенно быстрее и проще, нежели непосредственно на HTML. В ряде случаев необходимые HTML-теги будут вставлены в сгенерированный текст в соответствии с контекстом (и ничего специально писать не надо), например, абзацы или списки. В других случаях некие пометки добавить все же надо &amp;mdash; например, два пробела в конце строки вместо тега &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; или &lt;code&gt;##&lt;/code&gt; перед заголовком вместо обрамления ее тегами &lt;code&gt;&amp;lt;h2&amp;gt; .. &amp;lt;/h2&amp;gt;&lt;/code&gt;, однако эти символы добавляются проще и быстрее тегов. Их использование нисколько не ухудшает человекочитаемость, ведь строчка из звездочек больше похожа на линию отчеркивания, чем знакосочетание &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; Кроме того, можно довольно быстро переделать форматированием в Markdown готовый текст, написанный без разметки.&lt;/p&gt;
&lt;p&gt;Вольный перевод кусочка из официальной документации:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Markdown &amp;mdash; не замена HTML. Его синтаксис охватывает только очень малое подмножество HTML-тегов. Идея состоит не в том, чтобы упростить ввод тегов. По моему мнению, HTML-теги и так уже просты для вставки. Идея Markdown в том, чтобы упростить чтение, запись и редактирование прозы. HTML &amp;mdash; это формат для &lt;em&gt;публикации&lt;/em&gt;, а Markdown &amp;mdash; формат для &lt;em&gt;написания&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;На заметку тем, кто знает HTML, как родной, и предпочитает писать сразу на нем (благо, Pelican это позволяет): еще одно преимущество Markdown, весьма заметное при желании поделиться в тексте примером кода с красиво (ну, или хоть как-нибудь) подсвеченным синтаксисом &amp;mdash; pygments (который это умеет) работает в связке именно с &amp;laquo;буфером&amp;raquo;, Markdown или reStructuredText. На HTML будет недостаточно окружить код тегами &lt;code&gt;&amp;lt;code&amp;gt; .. &amp;lt;/code&amp;gt;&lt;/code&gt;, придется каждый элемент кода, который надо выделить особым образом, окружать соответствующими тегами, типа &lt;code&gt;&amp;lt;span class="n"&amp;gt;href&amp;lt;/span&amp;gt;&lt;/code&gt;, а потом писать в CSS-файле способ отображения класса &amp;laquo;n&amp;raquo;. А pygments может сделать все это самостоятельно.&lt;/p&gt;
&lt;h2 id="2"&gt;Простые примеры&lt;/h2&gt;
&lt;p&gt;Как я уже упоминал в другой статье, описания и примеров этого дела в интернете немало. Но добавлю все же и здесь, в формате &amp;laquo;код &amp;mdash; вид&amp;raquo;. Основные синтаксические штучки, доступные в пеликане &amp;laquo;из коробки&amp;raquo;, что надо написать, и как это будет выглядеть:&lt;/p&gt;
&lt;h3 id="2_1"&gt;Заголовки&lt;/h3&gt;
&lt;p&gt;Статья начинается с заголовка, так что и здесь начнем с них же &amp;mdash; заголовки (количество символов &lt;code&gt;#&lt;/code&gt; соответствует числу в теге &lt;code&gt;&amp;lt;h &amp;gt;&lt;/code&gt;):&lt;/p&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;# Заголовок 1
## Заголовок 2 с id {#id_header2}
###### Заголовок 6
####### Заголовок 7

заголовок
=========

заголовок
---------
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;h1 id="1_1"&gt;Заголовок 1&lt;/h1&gt;
&lt;h2 id="id_header2"&gt;Заголовок 2 с id&lt;/h2&gt;
&lt;h6 id="6"&gt;Заголовок 6&lt;/h6&gt;
&lt;h6 id="7"&gt;# Заголовок 7&lt;/h6&gt;
&lt;h1 id="_1"&gt;заголовок&lt;/h1&gt;
&lt;h2 id="_2"&gt;заголовок&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Забавно, что если поставить больше 6 знаков &lt;code&gt;#&lt;/code&gt;, то 6 из них воспримутся в качестве уровня заголовка, а остальные войдут в текст заголовка. Остальные будут отображаться в соответствии с таблицами стилей, как задано для &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; &amp;ndash; &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;. А еще заголовок можно отчеркнуть минусами или знаком равенства, получится второй и первый уровни соответственно, при этом, надо такой заголовок отделить с обеих сторон пустыми строками, как абзац.&lt;/p&gt;
&lt;h3 id="2_2"&gt;Горизонтальные линии&lt;/h3&gt;
&lt;p&gt;Линии отчеркивания можно нарисовать звездочками, минусами или символом подчеркивания, слитно или через пробелы. Только надо следить, чтобы у них тоже сверху и снизу были пустые строки, а то при обработке их могут принять за часть заголовка или маркированного списка. А вот линия из знаков равенства ничего особенного не делает и рисуется, как есть:
&lt;div markdown="1" class="equi_height"&gt;
&lt;div markdown="1"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;******

* * * *

-------

- - - -

_______

_ _ _ _


=====================
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;p&gt;=====================&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id="2_3"&gt;Таблицы&lt;/h3&gt;
&lt;p&gt;Таблицы можно разметить псевдографикой. Границы по умолчанию не прорисовываются, заголовки по умолчанию центрируются (поведение корректируется при помощи CSS), а выравнивание строк в столбце можно отрегулировать двоеточием в разделительной линии ниже заголовка, как в примере:
&lt;div markdown="1" class="equi_height"&gt;
&lt;div markdown="1"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;правый&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;центр&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="s s-Atom"&gt;---&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;--------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;ячейка&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;ячейка&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;ячейка&lt;/span&gt; &lt;span class="mf"&gt;3.1&lt;/span&gt; 
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt; &lt;span class="s s-Atom"&gt;так&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mf"&gt;1.3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mf"&gt;2.3&lt;/span&gt; &lt;span class="s s-Atom"&gt;с&lt;/span&gt; &lt;span class="s s-Atom"&gt;буквами&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mf"&gt;3.3&lt;/span&gt; &lt;span class="s s-Atom"&gt;и&lt;/span&gt; &lt;span class="s s-Atom"&gt;сяк&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th align="right"&gt;2 (правый)&lt;/th&gt;
&lt;th align="center"&gt;3 (центр)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ячейка 1.1&lt;/td&gt;
&lt;td align="right"&gt;ячейка 2.1&lt;/td&gt;
&lt;td align="center"&gt;ячейка 3.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2&lt;/td&gt;
&lt;td align="right"&gt;2.2&lt;/td&gt;
&lt;td align="center"&gt;3.2 так&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3&lt;/td&gt;
&lt;td align="right"&gt;2.3 с буквами&lt;/td&gt;
&lt;td align="center"&gt;3.3 и сяк&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id="2_4"&gt;Абзацы и внутристрочные элементы&lt;/h3&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;lt;!-- Можно использовать комментарии&lt;/span&gt;
&lt;span class="c"&gt;в стиле HTML, чтобы не показывать &lt;/span&gt;
&lt;span class="c"&gt;часть текста в обработанной странице --&amp;gt;&lt;/span&gt;

Пример Footnote[^1] в тексте. Будет
вынесена вниз страницы.
&lt;span class="c"&gt;&amp;lt;!-- Такие штуки надо размещать сразу же: --&amp;gt;&lt;/span&gt;
[^1]: Footnote по-русски &lt;span class="ni"&gt;&amp;amp;mdash;&lt;/span&gt; сноска

Словарь
: книга, содержащая перечень слов
с пояснениями и толкованиями

пример аббревиатуры: ИМХО
&lt;span class="c"&gt;&amp;lt;!-- Такие штуки тоже надо размещать сразу же: --&amp;gt;&lt;/span&gt;
*[ИМХО]: Имею Мнение &lt;span class="ni"&gt;&amp;amp;mdash;&lt;/span&gt; Хрен Оспоришь

Абзац создается разделением
пустыми строками, 
даже если строки абзаца
имеют простые переносы.

Однако, по два пробела  
на концах строк делают  
перенос строки без абзаца:  
**выделение** тегом __strong__  
*выделение* тегом _emphasize_  
***можно*** оба __*сразу*__  
внутристрочный `&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;блок кода&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;`  
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div style="max-width:350px"&gt;
&lt;!-- Можно использовать комментарии
в стиле HTML, чтобы не показывать 
часть текста в обработанной странице --&gt;

&lt;p&gt;Пример Footnote&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; в тексте. Будет
вынесена вниз страницы.
&lt;!-- Такие штуки надо размещать сразу же: --&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Словарь&lt;/dt&gt;
&lt;dd&gt;книга, содержащая перечень слов
с пояснениями и толкованиями&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;пример аббревиатуры: &lt;abbr title="Имею Мнение &amp;amp;mdash; Хрен Оспоришь"&gt;ИМХО&lt;/abbr&gt;
&lt;!-- Такие штуки тоже надо размещать сразу же: --&gt;&lt;/p&gt;
&lt;p&gt;Абзац создается разделением
пустыми строками, 
даже если строки абзаца
имеют простые переносы.&lt;/p&gt;
&lt;p&gt;Однако, по два пробела&lt;br /&gt;
на концах строк делают&lt;br /&gt;
перенос строки без абзаца:&lt;br /&gt;
&lt;strong&gt;выделение&lt;/strong&gt; тегом &lt;strong&gt;strong&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;выделение&lt;/em&gt; тегом &lt;em&gt;emphasize&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;можно&lt;/em&gt;&lt;/strong&gt; оба &lt;strong&gt;&lt;em&gt;сразу&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
внутристрочный &lt;code&gt;&amp;lt;h1&amp;gt;блок кода&amp;lt;/h1&amp;gt;&lt;/code&gt;  &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Некоторые символы могут иметь особое значение. Вот пример их использования:
&lt;div markdown="1" class="equi_height"&gt;
&lt;div markdown="1"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Использование HTML-тегов:
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text-shadow: black&lt;/span&gt;
&lt;span class="s"&gt;1px 1px 2px, red 0 0 1em;&lt;/span&gt;
&lt;span class="s"&gt;text-transform: uppercase;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;пример&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

использование спецсимволов  
(пример): &lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; &lt;span class="ni"&gt;&amp;amp;raquo;&amp;amp;mdash;&amp;amp;laquo;&lt;/span&gt;

использование служебных символов:  
&lt;span class="err"&gt;&amp;lt;&lt;/span&gt; &amp;gt; * [ ] { } ( ) \ _ # + - . !

использование служебных символов  
в сложных случаях: 
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; \[a\]\(a\) \`a\` \_a\_ #a

\##a
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;div&gt;
&lt;p&gt;Использование HTML-тегов:
&lt;span style="text-shadow: black
1px 1px 2px, red 0 0 1em;
text-transform: uppercase;"&gt;пример&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;использование спецсимволов&lt;br /&gt;
(пример): &amp;copy; &amp;raquo;&amp;mdash;&amp;laquo;&lt;/p&gt;
&lt;p&gt;использование служебных символов:&lt;br /&gt;
&amp;lt; &amp;gt; * [ ] { } ( ) \ _ # + - . !&lt;/p&gt;
&lt;p&gt;использование служебных символов&lt;br /&gt;
в сложных случаях: 
&amp;lt;a&gt; [a](a) `a` _a_ #a &lt;/p&gt;
&lt;p&gt;##a&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;В общих случаях генератор веб-страниц достаточно умен, чтобы понять, используется угловая скобка для обозначения HTML-тега или сама по себе, в других целях. То же касается и прочих символов, которые могут быть служебными как для HTML, так и для самого Markdown. Также он догадывается, что если &lt;code&gt;#&lt;/code&gt; не в начале строки &amp;mdash; то это не заголовок, если скобки [] и () не вплотную друг к другу &amp;mdash; то это не ссылка. В тех же случаях, когда использование таких символов очень уж похоже на служебное, следует подсказать генератору оставить символ в покое при помощи традиционного обратного слэша. Причем, для угловых скобок достаточно закрыть закрывающую (простите за тавтологию, но так уж есть).&lt;/p&gt;
&lt;h3 id="2_5"&gt;Блочная разметка: цитаты и блоки кода&lt;/h3&gt;
&lt;p&gt;Под блоками кода подразумеваются блоки предварительно отформатированного текста, которые будут отображаться так, как их напечатали, а не по правилам HTML или Markdown. При этом, в них можно включить подсветку синтаксиса, если это действительно программный код. Подсветку необходимо предварительно настроить, добавив файл CSS для кода, а также подключить способом, предусмотренным в используемой теме: либо в файле конфигурации, либо напрямую в шаблоне. Цитаты упаковываются в теги &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;, и их отображение можно настроить в стилевом файле.&lt;/p&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; Цитата умного человека &amp;amp;mdash; 
почти афоризм.

или так (то же самое):

&amp;gt; Цитата умного человека &amp;amp;mdash; 
&amp;gt; почти афоризм.

    Отступ в 4 пробела или 1 таб:
    будет окружено тегом &amp;lt;pre&amp;gt;,
    а если включена подсветка -
    то и подсвечено. Можно печатать
    всё: [a](http://a) &amp;lt;html&amp;gt; `ы`
    Сделано для блоков кода.

```
:::c
void sample_func(int j) {
    printf(j);
}

for (int i = 0; i &amp;lt; 9; i++) {
    sample_func(i);
}
/* 
 * по сути, то же самое, плюс
 * указание языка для подсветки.
 * вместо ``` можно 
 * использовать ~~~
 */
```
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div style="max-width:350px"&gt;
&lt;blockquote&gt;
&lt;p&gt;Цитата умного 
человека &amp;mdash; 
почти афоризм.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;или так (то же самое):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Цитата умного 
человека &amp;mdash; 
почти афоризм.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Отступ в 4 пробела или 1 таб:
будет окружено тегом &amp;lt;pre&amp;gt;,
а если включена подсветка -
то и подсвечено. Можно печатать
всё: [a](http://a) &amp;lt;html&amp;gt; `ы`
Сделано для блоков кода.
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sample_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;sample_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/* &lt;/span&gt;
&lt;span class="cm"&gt; * по сути, то же самое, плюс&lt;/span&gt;
&lt;span class="cm"&gt; * указание языка для подсветки.&lt;/span&gt;
&lt;span class="cm"&gt; * вместо ``` можно &lt;/span&gt;
&lt;span class="cm"&gt; * использовать ~~~&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Цитаты могут быть вложенными, если угловые скобочки удвоить. Кроме того, в цитаты можно вкладывать другие форматированные штучки, типа внутристрочного кода или списков.&lt;/p&gt;
&lt;h3 id="2_6"&gt;Списки&lt;/h3&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;Маркированный:

* пункт
* еще пункт

Нумерованный:

1. первый
2. второй

Смешанный:

1. пунктик с подпунктиками
    * 4 пробела дают
    + вложенность, а маркеры
    - могут быть разными
3. Цифры тоже неважны,
98. лишь бы цифры.

    Можно сделать абзац
    внутри списка

    * и даже внутри подпункта

        тоже можно сделать абзац.

    * Еще одна вложенность.

7. Надо только не забывать 
отступы и пустые строки.
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Маркированный:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;пункт&lt;/li&gt;
&lt;li&gt;еще пункт&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Нумерованный:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;первый&lt;/li&gt;
&lt;li&gt;второй&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Смешанный:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;пунктик с подпунктиками&lt;ul&gt;
&lt;li&gt;4 пробела дают&lt;/li&gt;
&lt;li&gt;вложенность, а маркеры&lt;/li&gt;
&lt;li&gt;могут быть разными&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Цифры тоже неважны,&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;лишь бы цифры.&lt;/p&gt;
&lt;p&gt;Можно сделать абзац
внутри списка&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;и даже внутри подпункта&lt;/p&gt;
&lt;p&gt;тоже можно сделать абзац.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Еще одна вложенность.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Надо только не забывать 
отступы и пустые строки.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id="2_7"&gt;Ссылки, картинки и их комбинация&lt;/h3&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;Простая автоматическая ссылка:  
&amp;lt;http://romeogolf.site&amp;gt;  

Чуть посложнее:
[Мой сайт](http://romeogolf.site &amp;quot;Ссылка&amp;quot;)

Ссылочная (сносочная? референсная?)  
ссылка: [Снова мой сайт][my_site]
или так: [Site][]

А где-нибудь ниже по тексту надо  
определить ссылку по указанному  
идентификатору.

Ссылка на [заголовок](#id_header2),  
который мы пометили идентификатором выше

Ссылка на собственную страницу,  
еще в исходном тексте:  
абсолютная (от корня content)  
[Рыба]({filename}/pages/test_page.md)  
или относительно этой страницы  
[Рыба]({filename}../../pages/test_page.md)

Статьи с тегом [pelican]({tag}pelican)  
или в категории [Блог]({category}Блог)

Картинка напрямую:
![флаги](./images/rg.png &amp;quot;romeo golf&amp;quot;)  
или через исходное размещение:
![флаги]
({filename}/images/rg.png &amp;quot;romeo golf&amp;quot;)

Картинка через сноску:
![флаги romeo и golf][flags]

Картинка и ссылка вместе:
[![флаги][flags]][my_site]
или так:
[![флаги](./images/rg.png)](http://romeogolf.site/)

[my_site]: http://romeogolf.site/
[Site]: http://romeogolf.site/  &amp;quot;Ссылка&amp;quot;
[flags]: ./images/rg.png (romeo golf)
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Простая автоматическая ссылка:&lt;br /&gt;
&lt;a href="http://romeogolf.site"&gt;http://romeogolf.site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Чуть посложнее:
&lt;a href="http://romeogolf.site" title="Ссылка"&gt;Мой сайт&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ссылочная (сносочная? референсная?)&lt;br /&gt;
ссылка: &lt;a href="http://romeogolf.site/"&gt;Снова мой сайт&lt;/a&gt;
или так: &lt;a href="http://romeogolf.site/" title="Ссылка"&gt;Site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;А где-нибудь ниже по тексту надо&lt;br /&gt;
определить ссылку по указанному&lt;br /&gt;
идентификатору.&lt;/p&gt;
&lt;p&gt;Ссылка на &lt;a href="#id_header2"&gt;заголовок&lt;/a&gt;,&lt;br /&gt;
который мы пометили идентификатором выше&lt;/p&gt;
&lt;p&gt;Ссылка на собственную страницу,&lt;br /&gt;
еще в исходном тексте:&lt;br /&gt;
абсолютная (от корня content)&lt;br /&gt;
&lt;a href="http://romeogolf.site/pages/testovaia-stranitsa.html"&gt;Рыба&lt;/a&gt;&lt;br /&gt;
или относительно этой страницы&lt;br /&gt;
&lt;a href="http://romeogolf.site/pages/testovaia-stranitsa.html"&gt;Рыба&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Статьи с тегом &lt;a href="http://romeogolf.site/tag/pelican.html"&gt;pelican&lt;/a&gt;&lt;br /&gt;
или в категории &lt;a href="http://romeogolf.site/category/blog.html"&gt;Блог&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Картинка напрямую:
&lt;img alt="флаги" src="./images/rg.png" title="romeo golf" /&gt;&lt;br /&gt;
или через исходное размещение:
&lt;img alt="флаги" src="http://romeogolf.site/images/rg.png" title="romeo golf" /&gt;&lt;/p&gt;
&lt;p&gt;Картинка через сноску:
&lt;img alt="флаги romeo и golf" src="./images/rg.png" title="romeo golf" /&gt;&lt;/p&gt;
&lt;p&gt;Картинка и ссылка вместе:
&lt;a href="http://romeogolf.site/"&gt;&lt;img alt="флаги" src="./images/rg.png" title="romeo golf" /&gt;&lt;/a&gt;
или так:
&lt;a href="http://romeogolf.site/"&gt;&lt;img alt="флаги" src="./images/rg.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Как видно из примера, картинка отличается от ссылки восклицательным знаком перед первой скобкой. В первых квадратных скобках идет текст ссылки или альтернативный текст для картинки (который отображается, если картинку по какой-то причине не видно), в круглых скобках &amp;mdash; путь к объекту, а также необязательный текст в кавычках, который будет атрибутом title (во всплывающей подсказке при наведении мыши на ссылку или картинку).&lt;/p&gt;
&lt;p&gt;Удобно пользоваться сносочноым типом ссылки, когда вместо адреса в круглых скобках пишется идентификатор в квадратных, а ниже дается расшифровка &amp;mdash; тоже путь к объекту и необязательный title в кавычках (одинарных или двойных) или скобках. Ссылка через сноску хороша тем, что можно использовать одну и ту же ссылку или картинку в нескольких местах по тексту. Кроме того, удобно держать все ссылки рядом, на случай, если придется их перестраивать.&lt;/p&gt;
&lt;p&gt;При сносочном типе ссылки можно вторую пару квадратных скобок оставить пустой или вообще не ставить, тогда текст ссылки сам будет сноской, которую надо использовать ниже при указании адреса.&lt;/p&gt;
&lt;p&gt;На собственные файлы (страницы или картинки) можно ссылаться как напрямую, зная, где они окажутся в структуре сайта после генерации, так и на исходник. Второй вариант предпочтительнее, так как, во-первых, не нужно задумываться о структуре сайта при его наполнении контентом, а во-вторых, структура может поменяться, скажем, в результате автоматизированной архивации старых статей с перемещением их в соответствующие папки.&lt;/p&gt;
&lt;p&gt;Аналогично файлам в исходниках, можно ссылаться на категории или теги, с соответствующим префиксом в фигурных скобках.&lt;/p&gt;
&lt;h2 id="3"&gt;Некоторые особенности и тонкости&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Необходимо быть достаточно внимательным с пустыми строками, отступами и пробелами в концах строк, так как они здесь играют роль тегов, а наличие и количество пробелов видно плохо.&lt;/li&gt;
&lt;li&gt;Если четыре пробела (или один таб) идут перед первой строкой абзаца &amp;mdash; абзац считается блоком кода.&lt;/li&gt;
&lt;li&gt;Если четыре пробела идут перед первой строкой абзаца, следующего сразу после пункта списка &amp;mdash; абзац считается дополнительным абзацем первого уровня текущего пункта списка. Если при этом над пустой строкой был второй уровень вложенности &amp;mdash; абзац все равно будет сдвинут до первого уровня, а если надо, чтобы он принадлежал второму уровню, то надо ставить восемь пробелов.&lt;/li&gt;
&lt;li&gt;Если в списке вставить явным образом блок кода (через &lt;code&gt;~~~&lt;/code&gt;), то последующие абзацы с четырьмя пробелами в начале будут считаться тоже блоками кода.&lt;/li&gt;
&lt;li&gt;Если явно указанный блок кода будет еще и с отступом, то он будет воспринят некорректно, будет пропущено указание языка для подсветки &lt;code&gt;:::язык&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Чтобы запихать блок кода в список, надо &amp;laquo;утопить&amp;raquo; его отступами дважды &amp;mdash; восемь пробелов для первого уровня, при этом оформить абзацным методом, без &lt;code&gt;~~~&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Чтобы использовать HTML-код в Markdown по прямому назначению, он не должен быть &amp;laquo;утоплен&amp;raquo; на четыре пробела, иначе будет восприниматься, как блок кода, то есть, не для использования, а для отображения.&lt;/li&gt;
&lt;li&gt;Блочные HTML-теги, например, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, должны быть отделены выше и ниже пустой строкой.&lt;/li&gt;
&lt;li&gt;В HTML-коде внутри блочных тегов не работает разметка Markdown, ее конструкции будут выводиться без обработки, как есть. Вопрос, в принципе, решаемый, но об этом в другой раз.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="equi_height"&gt;
&lt;div markdown="1"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;float:right&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
  ![флаги romeo и golf]({filename}/images/rg.png)
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;display:inline-block; margin:10px&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Попытка вставить картинку  
в плавающий блок &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;div style="max-width:250px;"&gt;
&lt;div style="float:right"&gt; 
  ![флаги romeo и golf]({filename}/images/rg.png)
&lt;/div&gt;
&lt;div style="display:inline-block; margin:10px"&gt;
Попытка вставить картинку  
в плавающий блок &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Существуют разные реализации Markdown. Описания некоторых особенностей синтаксиса могут не соответствовать действительности для питонового модуля. Например, поддерживаемая на GitHub возможность делать зачеркнутый текст &lt;code&gt;~~striked~~&lt;/code&gt; здесь не работает. Автоматические ссылки без явного указания при помощи угловых скобок тоже не поддерживаются, ссылкообразное знакосочетание в тексте само преобразовано в ссылку не будет.&lt;/li&gt;
&lt;li&gt;Существуют расширения Markdown, которые позволяют обойти некоторые ограничения и добавить функциональные возможности. Одни расширения фактически являются общими для разных реализаций Markdown (потому что написаны для разных языков &amp;mdash; Perl, Python, Ruby, Java, &amp;hellip; Там, вообще-то, приличный список.) Другие присутствуют только в некоторых реализациях. Расширения могут быть встроенными в реализацию, а могут быть установлены отдельно. Их можно включать и отключать. Расширения, которые можно использовать в реализации для Python, могут оказаться удобными и полезными при создании сайта (если хотите &amp;mdash; блога) на Pelican. Но это тема для отдельного разговора.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Footnote по-русски &amp;mdash; сноска&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="pelican"></category><category term="markdown"></category></entry><entry><title>Pelican и новая тема</title><link href="http://romeogolf.site/pelican-i-novaia-tema.html" rel="alternate"></link><updated>2016-01-19T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-19:pelican-i-novaia-tema.html</id><summary type="html">&lt;h2 id="_1"&gt;Начнем с нуля&lt;/h2&gt;
&lt;p&gt;Тема notmyidea сама по себе выглядит неплохо и вполне допускает правку под свои нужды. Но поступим экстремальнее &amp;mdash; сделаем всё с самого начала. В корне проекта сайта, в нашем случае &amp;mdash; &lt;code&gt;D:\site\&lt;/code&gt;, создаем папку themes, там делаем папку nanotheme, а в ней &amp;mdash; папки static и templates. Почему nano? Во-первых, это модно, во-вторых, в этой теме будет предельный минимум, только для примера, чтобы хоть как-то работало.&lt;/p&gt;
&lt;p&gt;В папке templates создадим base.html, текстовый файл в UTF-8. Непременный, обязательный базовый шаблон, который будет определять общую разметку для всех страниц, подчиняющихся нашей теме. Ну, и набросаем общий внешний вид:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;будет заголовок&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-header&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      будет хедер
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Будет главное меню
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Будет контент
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      будет футер
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если этот файл посмотреть в браузере, то можно увидеть тупо четыре строчки:&lt;br /&gt;
будет хедер&lt;br /&gt;
Будет главное меню&lt;br /&gt;
Будет контент&lt;br /&gt;
будет футер  &lt;/p&gt;
&lt;p&gt;А если запустить генерацию страниц сайта, то в результате мы вообще не увидим изменений. Оно и понятно &amp;mdash; тема-то в настройках все еще подключена старая. Давайте переподключим. Найдем в pelicanconf.py строчку&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;notmyidea&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;и заменим ее на &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;themes/nanotheme&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Как вариант, можно не заменять, а поставить в начале исходной строки знак комментария #, а новую просто поставить чуть ниже (если хотите &amp;mdash; чуть выше).&lt;/p&gt;
&lt;p&gt;И вот теперь после генерации сайта мы увидим изменения. А именно: мы увидим эти же четыре строчки, что и в base.html, на любой сгенерированной странице сайта. Это не то, что нам бы хотелось, но именно то, что мы заказывали. Значит, надо научиться заказывать то, что мы хотим. &lt;/p&gt;
&lt;h2 id="_2"&gt;От простой разметки &amp;mdash; к шаблону&lt;/h2&gt;
&lt;p&gt;Для того, чтобы сделать из примитивной веб-странички примитивный шаблон для Pelican, надо использовать &lt;a href="http://jinja.pocoo.org/docs/"&gt;jinja2&lt;/a&gt; &amp;mdash; движок сайтовых шаблонов для Python. Вставляя конструкции дзиндзя в текст разметки, мы даем генератору сайта понять, в каком месте шаблона мы хотим видеть некоторую информацию, и где ее взять. Строго говоря, эти конструкции будут работать в любом языке разметки, но, раз уж делаем сайт, нас интересует конкретно HTML.&lt;/p&gt;
&lt;p&gt;Самыми употребимыми (глядя на код шаблонов нескольких скачанных тем) будут блоки и переменные. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;a_title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Первая конструкция позволяет в дочернем шаблоне создать именованный блок (с именем title), и содержимое этого блока будет подставлено на место, определенное в родительском шаблоне. Вторая конструкция вместо переменной языка Python вставит ее значение. А значение, в свою очередь, может быть, например, задано в файле конфигурации pelicanconf.py или определяться при помощи метаданных статьи или страницы.&lt;/p&gt;
&lt;p&gt;Вообще-то, блоки являются подмножеством операторов, а переменные &amp;mdash; подмножеством выражений:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{% &amp;hellip; %} &amp;mdash; для операторов&lt;/li&gt;
&lt;li&gt;{{ &amp;hellip; }} &amp;mdash; для выражений (печать вывода шаблона)&lt;/li&gt;
&lt;li&gt;{# &amp;hellip; #} &amp;mdash; для комментариев, которые не включаются в вывод шаблона&lt;/li&gt;
&lt;li&gt;#  &amp;hellip; ## &amp;mdash; для линейных выражений (в отличие от блочных, на одну строку)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;но подробный разбор синтаксиса jinja2 займет слишком много места и времени, чтобы заниматься им прямо здесь и прямо сейчас.&lt;/p&gt;
&lt;p&gt;Давайте попробуем воткнуть парочку блоков и переменных. Что касается переменных &amp;mdash; как минимум, мы имеем в настройках AUTHOR и SITENAME. Типовые названия некоторых блоков можно подсмотреть в других темах. Итак, правим базовый шаблон:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}{{&lt;/span&gt;&lt;span class="nv"&gt;SITENAME&lt;/span&gt;&lt;span class="cp"&gt;}}{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;head&lt;/span&gt; &lt;span class="cp"&gt;%}{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-header&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="s"&gt;id=&amp;quot;home-link&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITENAME&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-nav&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;cat&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;null&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;categories&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;active&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;cat.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;cat&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;DISPLAY_PAGES_ON_MENU&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;current_page&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;PAGES&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;current_page&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;page&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;active&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;current_page.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;current_page.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;nav&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;main_section&lt;/span&gt; &lt;span class="cp"&gt;%}{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;footer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;AUTHOR&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;В результате base.html будет выглядеть уже так:&lt;/p&gt;
&lt;pre style="overflow:auto;"&gt;
{% block head %}{% endblock %}
{{ SITENAME }}

    {% for cat, null in categories %}
    {{ cat }}
    {% endfor %} {% if DISPLAY_PAGES_ON_MENU %} {% for current_page in PAGES %}
    {{ current_page.title }}
    {% endfor %} {% endif %} 

{% block main_section %}{% endblock %}
© {{AUTHOR}} 
&lt;/pre&gt;

&lt;p&gt;а откомпилированные страницы сайта, соответственно, так:&lt;/p&gt;
&lt;pre&gt;
Site

    Разное
    Рыба
    О сайте

© Me 
&lt;/pre&gt;

&lt;p&gt;причем, ссылки &amp;laquo;меню&amp;raquo; кликабельны, что можно увидеть по изменению адреса в адресной строке браузера. Но все страницы выглядят совершенно одинаково. &lt;/p&gt;
&lt;p&gt;В этом шаблоне мы:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;в теге &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; указали заголовок сайта, отображаемый в панели и вкладке браузера &amp;mdash; взяли его из переменной SITENAME, указанной в  pelicanconf.py;&lt;/li&gt;
&lt;li&gt;в теге &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; сделали заголовок сайта из этой же переменной;&lt;/li&gt;
&lt;li&gt;в теге &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; изобразили меню сайта:&lt;ul&gt;
&lt;li&gt;сперва при помощи оператроа &lt;code&gt;for&lt;/code&gt; перечислили все категории, которые Python наковырял из метаданных наших статей, причем, обернули названия категорий в тег &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, чтобы получились ссылки;&lt;/li&gt;
&lt;li&gt;затем при помощи оператора &lt;code&gt;if&lt;/code&gt; проверили переменную, заданную в файле конфигурации, которая разрешает указание в меню не только статей, но и страниц;&lt;/li&gt;
&lt;li&gt;убедившись, что страницы тоже можно перечислить в меню, опять же при помощи &lt;code&gt;for&lt;/code&gt; сделали список страниц, которых у нас пока одна &amp;mdash; &amp;laquo;О сайте&amp;raquo;;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;в html-блоке &lt;code&gt;content&lt;/code&gt; добавили jinja-блок &lt;code&gt;main_section&lt;/code&gt; &amp;mdash; для наследников;&lt;/li&gt;
&lt;li&gt;в футере нарисовали значок копирайта с указанием автора, а автора взяли опять же из файла конфигурации, переменная AUTHOR.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;Добавляем шаблоны&lt;/h2&gt;
&lt;p&gt;Но у нас нет шаблона для главной страницы сайта, которая index, а также для страницы со списком категорий, тегов и, собственно, самих статей, поэтому все страницы одинаковые &amp;mdash; к ним применяется единственный шаблон. Сделаем index.html. В нем первым делом укажем, что он расширяет базовый. Потом в &lt;code&gt;main_section&lt;/code&gt; перечислим имеющиеся статьи, запихав их в соответствующие html-теги, не забыв указать краткое содержание (article.summary). Должно получиться примерно так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;main_section&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-section blog-section&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blog-posts&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;article&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;articles_page.object_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.locale_date&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;SITEURL&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.url&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.title&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.summary&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Шаблон для статей будет называться article.html, тоже расширяет базовый. В заголовке мы его попросим показать не имя сайта, а название статьи. В главной секции укажем дату статьи (сформированную в соответствии с локалью), заголовок статьи и сам текст (article.content). После текста статьи перечислим теги, если они есть, то есть, сперва проверим наличие, а потом нарисуем список, в котором каждый тег сделан ссылкой на список статей с таким тегом:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}{{&lt;/span&gt;&lt;span class="nv"&gt;article.title&lt;/span&gt;&lt;span class="cp"&gt;}}{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;

&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;main_section&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-section blog-section&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blog-posts&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.locale_date&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.title&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.content&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;   
      &lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;article.tags&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Теги:&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;taglist&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;tag&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;article.tags&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;tag.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;tag&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
              &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для страниц, точнее, для пока единственной нашей страницы, нужен шаблон page.html, похожий на шаблон статей, только проще, без тегов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}{{&lt;/span&gt; &lt;span class="nv"&gt;page.title&lt;/span&gt; &lt;span class="cp"&gt;}}{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;main_section&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-section&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;entry-title&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;page.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;page.content&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ну, и для выбора страниц по тегу нужен шаблон tag.html: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;base.html&amp;#39;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;Статьи с тегом &amp;#39;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;tag&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&amp;#39; | &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITENAME&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;main_section&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;main-section blog-section&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blog-posts&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;article&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;articles&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.locale_date&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;SITEURL&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.url&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.title&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;article.summary&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Итак, &lt;code&gt;D:\site\themes\nanotheme\templates\&lt;/code&gt; содержит пять файлов шаблонов. Вернемся в корень проекта сайта и запустим сборку. Теперь гиперссылки работают вменяемо. Ну, название сайта по-прежнему открывает содержимое корневой папки, но это нормально. Зато заголовок статьи ведет на страницу статьи, теги открывают страницу со списком статей с таким тегом, категории &amp;mdash; на страницу со списком статей в данной категории.&lt;/p&gt;
&lt;p&gt;Ой! А почему? Мы же не делали шаблон для categories.html, а он работает! Это как?
А так. &lt;a href="http://docs.getpelican.com/en/3.6.3/themes.html#inheritance"&gt;Документация&lt;/a&gt; рассказывает нам (правда, по-английски), что если какого-то из настоятельно необходимых шаблонов не окажется в папке templates, то вместо него будет использоваться соответствующий шаблон темы simple. И вообще, дескать, если вас устраивает HTML-структура шаблона этой умолчательной темы, то не надо писать собственных велосипедов. Тем более, что можно унаследоваться от шаблонов этой темы и чутка расширить их. Ну что ж, в отношении шаблона categories так и поступим.&lt;/p&gt;
&lt;h2 id="_4"&gt;Подключение стилей&lt;/h2&gt;
&lt;p&gt;У нас теперь есть разметка разного рода страниц сайта. Но нет оформления, какая же это тема? Да никакая. Чтобы она стала хоть какая-нибудь, надо ей добавить стили. Значит, идем в папку &lt;code&gt;D:\site\themes\nanotheme\static\&lt;/code&gt; и делаем там папку &lt;code&gt;css&lt;/code&gt;, а в ней файл styles.css:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;/* установим серенький цвет фона и размер полей */&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#CCC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-header&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nb"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* внутриблочные отступы до границы */&lt;/span&gt;
    &lt;span class="nb"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* отступы между блоками страницы */&lt;/span&gt;
    &lt;span class="nb"&gt;outline&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* черненькая тоненькая рамочка */&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* и белый цвет фона */&lt;/span&gt;
    &lt;span class="nb"&gt;min-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* позволим тянуться, */&lt;/span&gt;
    &lt;span class="nb"&gt;max-width&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;800px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* но в определенных пределах */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nb"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* ограничим высоту */&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* и подменим цвет */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* чтобы ссылка-заголовок при наведении не меняла цвет */&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nn"&gt;#name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* для текста названия сайта - размер, шрифт и рюшечки */&lt;/span&gt;
    &lt;span class="nb"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;350%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nb"&gt;font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Убираем подчёркивание */&lt;/span&gt;
    &lt;span class="nb"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Цвет текста белый */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;margin-top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-nav&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Строчно-блочные элементы */&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#551111&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Цвет фона */&lt;/span&gt;
    &lt;span class="nb"&gt;margin-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Расстояние между пунктами меню */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-nav&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Цвет ссылок */&lt;/span&gt;
    &lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Блочный элемент */&lt;/span&gt;
    &lt;span class="nb"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Поля вокруг текста */&lt;/span&gt;
    &lt;span class="nb"&gt;text-decoration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Убираем подчёркивание */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-nav&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#881144&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Цвет фона при наведении курсора мыши */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.main-nav&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nc"&gt;.active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#881144&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Цвет фона при наведении курсора мыши */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.tags&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* для списка тегов к статье, чтобы они были в одну строку */&lt;/span&gt;
    &lt;span class="nb"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inline&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Строчно-блочные элементы */&lt;/span&gt;
    &lt;span class="nb"&gt;margin-right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Расстояние между пунктами меню */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Надо еще не забыть подключить эти стили в базовом шаблоне base.html, например, сразу после тега &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/theme/css/styles.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ни в коем случае не претендую на то, что создал прекрасный образец стиля. Цветовая гамма сомнительная, решение задать размер шрифта в процентах спорное. Однако такого CSS достаточно для того, чтобы показать: тема заработала так, как мы ожидали.&lt;/p&gt;
&lt;p&gt;В нее еще многое можно напихать. Добавить шаблоны страниц для категорий и авторов, обозначить поведение, связанное с архивацией старых статей, включить ограничение количества статей на странице, дорисовать сайдбар (а может, и два, с обеих сторон), добавить плагины для облака тегов или карты сайта, нарисовать фон, логотип и иконку favicon, подобрать вменяемый набор цветов для оформления&amp;hellip; В общем, хватает работы для дизайнера, верстальщика, контент-менеджера и всех остальных работников веб-студии, которых приходится представлять в единственном числе в собственном лице.&lt;/p&gt;
&lt;h2 id="_5"&gt;Всё еще впереди&lt;/h2&gt;
&lt;p&gt;Чтобы сделать &amp;laquo;идеальный&amp;raquo; по своим требованиям шаблон (с точки зрения функциональности), надо хорошо представлять себе настройки Pelican и хотя бы в общих чертах иметь представление о jinja2.&lt;/p&gt;
&lt;p&gt;Чтобы сделать качественную разметку шаблона (с точки зрения внешнего вида), надо иметь знания в области HTML, CSS, местами &amp;mdash; JavaScript, и в общих чертах представлять, как это все работает в разных браузерах.&lt;/p&gt;
&lt;p&gt;Чтобы сайт не вызывал отвращения у посетителей, надо быть хоть немного дизайнером, ну, или хотя бы обладать зачатками вкуса. К сожалению, этот параметр трудно оценить у себя самостоятельно&amp;hellip;&lt;/p&gt;
&lt;p&gt;Чтобы наполнять сайт контентом, надо уметь пользоваться языком разметки Markdown, но местами придется вставлять и HTML, при этом, надо знать язык статьи (русский, например, но хотелось бы иногда и английский) хотя бы на четверочку, владеть словом, а для привлекательного оформления уметь рисовать и фотографировать.&lt;/p&gt;
&lt;p&gt;Как же много требований&amp;hellip; Но не надо сдаваться! Тем более, никто не будет подходить к оценке блога с той же позиции, что и к оценке сайта профессионала-дизайнера или серезной промышленной компании. В конце концов, можно остановиться на простом минималистичном дизайне и наращивать только удобство пользования.&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>Pelican и основные настройки заготовки сайта</title><link href="http://romeogolf.site/pelican-i-osnovnye-nastroiki-zagotovki-saita.html" rel="alternate"></link><updated>2016-01-16T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-16:pelican-i-osnovnye-nastroiki-zagotovki-saita.html</id><summary type="html">&lt;h2 id="_1"&gt;Настройки и тема&lt;/h2&gt;
&lt;p&gt;То, что вышло на предыдущем шаге, уже является веб-страницей. Заготовка отображается в браузере (не так, как хотелось бы, но именно так, как задано в ее коде), худо-бедно размечена и содержит гиперссылки. Однако, гиперссылки между страницами сайта не работают, а внешний вид &amp;mdash; именно, что &amp;laquo;худо&amp;raquo; и &amp;laquo;бедно&amp;raquo;.&lt;/p&gt;
&lt;p&gt;Настала пора заняться темой и конфигурацией.&lt;/p&gt;
&lt;h3 id="_2"&gt;О темах&lt;/h3&gt;
&lt;p&gt;Тема определяет внешний вид сайта, для чего включает в себя правила отображения страниц: шаблоны страниц всяческого вида, предусмотренные для данного сайта, а также стили и прочие инструменты веб-дизайна, типа скриптов и иконок.&lt;/p&gt;
&lt;p&gt;В общем случае тема представляет собой папку, имя которой и будет названием темы. В ней лежат подпапки static и templates, кроме того, приличные люди, желающие выложить тему собственного производства для всеобщего пользования, кладут в корень папки файлы README (обычно README.md или README.rst, если написано на Markdown или reStructuredText соответственно) и screenshot.png, чтобы пояснить особенности установки и настройки и показать внешний вид. Особенности настройки могут потребовать установки дополнительных модулей Python или дополнительных плагинов Pelican.&lt;/p&gt;
&lt;p&gt;В папке templates непременно должен быть файл base.html, в котором описан базовый шаблон с разметкой, общей для всех страниц сайта, остальные шаблоны в большинстве случаев являются его наследниками. Впрочем, можно извратиться и сделать совершенно независимые и непохожие друг на друга шаблоны для каждой страницы, только это отдает легким безумием. Можно сделать пару-тройку безумно непохожих на остальные страниц, если это чем-то обосновано.&lt;/p&gt;
&lt;p&gt;Чаще всего помимо базового в теме есть шаблоны для статей (article.html), страниц (page.html), списков тегов, категорий и авторов (tags.html, categories.html, authors.html), списков статей, объединенных общим тегом, категорией или автором (tag.html, category.html, author,html), списка архивных статей (archives.html), и всякие рюшечки для добавления на страницу комментариев от &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt; (disqus.html), аналитики от Google (analytics.html) 
 и кнопок соцсетей (например, twitter.html).&lt;/p&gt;
&lt;p&gt;В папке static обязательно должны быть таблицы стилей. Чаще всего (особенно, если кроме стилей используется что-то еще) они лежат в подпапке css, основной файл может называться styles.css, main.css, local.css и вообще название ограничено только полетом фантазии автора. Чаще всего рядом лежит pygments.css, необходимый для корректной подсветки синтаксиса примеров кода на странице. При помощи этого файла можно менять стили отображения кода, например, светлый текст на темном фоне или наоборот, то есть, для подсветки кода есть свои темы, поэтому лучше придерживаться именно этого названия для css-файла, чтобы при замене темы кода надо было только заменить его, а не искать в разных местах, где переименовывать. Ведь дополнительный файл может быть как подключен в коде шаблона, так и импортирован в основном стилевом файле, как автор захотел.&lt;/p&gt;
&lt;p&gt;Кроме подпапки css, в static могут быть подпапки fonts с используемыми нестандартными шрифтами, images или img с картинками (фонами и иконками) и js с используемыми скриптами JavaScript.&lt;/p&gt;
&lt;h3 id="_3"&gt;Где взять тему&lt;/h3&gt;
&lt;p&gt;У нашей заготовки темы нету никакой, а хочется хоть какую-нибудь. Но Pelican не так плох, чтобы не давать возможности поиграться с темой &amp;laquo;из коробки&amp;raquo;. В комплекте поставки идет две темы: simple и notmyidea. Папки с соответствующими названиями лежат где-то в недрах Pelican, который, в свою очередь, расположен где-то внутри Python. В моем случае это &lt;code&gt;C:\Python33\Lib\site-packages\pelican\themes&lt;/code&gt;. Однако, лазить по внутренностям змеи и птицы &amp;mdash; не наше дело. Для упрощения задачи нам любезно подкинули специальную утилиту pelican-themes. Команда (как обычно, в консоли, например, файлового менеджера FAR или в окне cmd.exe)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;С&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican-themes.exe&lt;/span&gt;&lt;span class="c1"&gt; -l&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;выведет список установленных тем. Собственно, вот эти две упомянутые и выведет. С помощью этой же утилиты темы можно устанавливать, удалять, создавать символические ссылки на имеющиеся темы (благодаря чему тема не будет скопирована внутрь пеликана, но пеликан будет о ней знать и сможет использовать). Например,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;С&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican-themes.exe&lt;/span&gt;&lt;span class="c1"&gt; -i D:\Download\subtle &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;установит тему subtle, если она скачана и лежит в &lt;code&gt;D:\Download&lt;/code&gt;, а &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;С&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican-themes.exe&lt;/span&gt;&lt;span class="c1"&gt; -r subtle &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;удалит ее. Впрочем, процедура установки и удаления тем не особенно важна. Установленную тему проще подключить в настройках файла конфигурации, чем неустановленную. Однако, можно использовать не просто имя темы, а полный путь к ней, и тогда теме не нужно быть установленной. Это касается раздобытых в интернете тем, либо написанных самостоятельно. Комплектные темы &amp;mdash; упомянутые две &amp;mdash; лучше все-таки не трогать.&lt;/p&gt;
&lt;p&gt;Что касается поиска готовых, но более-менее интересных тем &amp;mdash; больше всего их, наверное, на GitHub, например, в &lt;a href="https://github.com/getpelican/pelican-themes"&gt;этом сборнике&lt;/a&gt;. Но пока разберемся с имеющейся.&lt;/p&gt;
&lt;h2 id="_4"&gt;Откроем файл конфигурации&lt;/h2&gt;
&lt;p&gt;В корне проекта после его создания и первой сборки сайта появилась папка &lt;strong&gt;pycache&lt;/strong&gt;. Оставим ее в покое, она нужна питону, пусть пользуется. Файлы Makefile, fabfile.py и develop_server.sh можно спокойно удалить. Если они вдруг когда-нибудь понадобятся, их будет несложно получить снова. Файл publishconf.py оставим в покое, он нас пока не интересует, но может позже и пригодится. Откроем 
pelicanconf.py в текстовом редакторе. Не запустим его, а то Python попытается выполнить, а именно откроем для редактирования.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Me&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Site&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Europe/Paris&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ru&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Pelican&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://getpelican.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Python.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://python.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Jinja2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://jinja.pocoo.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;You can modify those links in your config file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;You can add links in your config file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Another social link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c1"&gt;#RELATIVE_URLS = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pelican собрал его на основе наших ответов при анкетировании после запуска утилиты pelican-quickstart. Разберем по полочкам. Начало (первые три строки) нужно питону, а не нам. Далее AUTHOR и SITENAME &amp;mdash; можно поставить что-то более осмысленное, собственное имя (или партийный псевдоним) для AUTHOR и что-нибудь креативное для SITENAME.&lt;/p&gt;
&lt;p&gt;SITEURL = &amp;lsquo;&amp;rsquo; можно оставить и так, пока мы не лезем в интернеты, а балуемся на собственном домашнем компьютере.&lt;/p&gt;
&lt;p&gt;PATH указывает на папку, в которой лежат заготовки статей, страниц и прочего контента, если прочее будет.&lt;/p&gt;
&lt;p&gt;TIMEZONE &amp;mdash; пока не лезем в интернеты, можно игнорировать. Можно и исправить на свою, хуже не будет.&lt;/p&gt;
&lt;p&gt;DEFAULT_LANG &amp;mdash; имеет смысл сделать &amp;lsquo;ru&amp;rsquo;, хотя действительно важным этот параметр является для многоязычных сайтов.&lt;/p&gt;
&lt;p&gt;Блок параметров под комментарием #Feed generation предназначен для настройки ленты Atom RSS, причем, генерация пока отключена.&lt;/p&gt;
&lt;p&gt;LINKS, который под комментарием # Blogroll, содержит список ссылок. Эти ссылки будут отображаться в блоке Blogroll, место и внешний вид &amp;mdash; в зависимости от шаблона. По умолчанию заданы ссылки на Pelican, Python.org, Jinja2 и дана заготовочка, которую можно поправить по своему желанию.&lt;/p&gt;
&lt;p&gt;Аналогичное назначение у SOCIAL, что под комментарием # Social widget &amp;mdash; ссылки на соцсети, пока только в виде заготовки. LINKS и SOCIAL можно пока что убрать совсем или закрыть комментарием при помощи символа # в начале каждой отключаемой строки&lt;/p&gt;
&lt;p&gt;DEFAULT_PAGINATION &amp;mdash; максимальное количество статей на страницу. Можно вместо числа поставить False, тогда будет неограничено.&lt;/p&gt;
&lt;p&gt;#RELATIVE_URLS = True следует &amp;laquo;раскомментировать&amp;raquo;, то есть, удалить символ # перед параметром. Параметр задает относительность при формировании URL. Для локального сайта, не использующего веб-сервер, это необходимо. После публикации имеет смысл закрыть обратно, но о необходимости и причинах этого лучше говорить не здесь. Может быть, позже&amp;hellip;&lt;/p&gt;
&lt;p&gt;В этом файле, можно в конце, необходимо дописать такие строки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# подключаем предустановленную тему&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;notmyidea&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# перед генерацией стираем старый вариант сайта&lt;/span&gt;
&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Последняя строка нужна потому, что мы пока что экспериментируем. Будем добавлять и удалять элементы контента, а в выходной папке останутся следы уже ненужных страниц. Пусть Pelican сам подтирает их за нами.&lt;/p&gt;
&lt;h2 id="_5"&gt;Вот такая тема&lt;/h2&gt;
&lt;p&gt;А давайте еще создадим в папке content подпапку pages рядом с articles. А туда положим файл about.md такого содержания:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;О&lt;/span&gt; &lt;span class="err"&gt;сайте&lt;/span&gt;

&lt;span class="err"&gt;На&lt;/span&gt; &lt;span class="err"&gt;этой&lt;/span&gt; &lt;span class="err"&gt;странице&lt;/span&gt; &lt;span class="err"&gt;по&lt;/span&gt; &lt;span class="err"&gt;логике&lt;/span&gt; &lt;span class="err"&gt;вещей&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;соответствии&lt;/span&gt; &lt;span class="err"&gt;с&lt;/span&gt; &lt;span class="err"&gt;названием&lt;/span&gt; &lt;span class="err"&gt;должно&lt;/span&gt; &lt;span class="err"&gt;бы&lt;/span&gt; 
&lt;span class="err"&gt;присутствовать&lt;/span&gt; &lt;span class="err"&gt;внятное&lt;/span&gt; &lt;span class="err"&gt;описание&lt;/span&gt; &lt;span class="err"&gt;сайта&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;частью&lt;/span&gt; &lt;span class="err"&gt;которого&lt;/span&gt; &lt;span class="err"&gt;является&lt;/span&gt; &lt;span class="err"&gt;данная&lt;/span&gt; &lt;span class="err"&gt;страница&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="err"&gt;К&lt;/span&gt; &lt;span class="err"&gt;сожалению&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;у&lt;/span&gt; &lt;span class="err"&gt;автора&lt;/span&gt; &lt;span class="err"&gt;сайта&lt;/span&gt; &lt;span class="err"&gt;до&lt;/span&gt; &lt;span class="err"&gt;сих&lt;/span&gt; &lt;span class="err"&gt;пор&lt;/span&gt; &lt;span class="err"&gt;нет&lt;/span&gt; &lt;span class="err"&gt;достаточно&lt;/span&gt; &lt;span class="err"&gt;внятного&lt;/span&gt; &lt;span class="err"&gt;представления&lt;/span&gt; &lt;span class="err"&gt;о&lt;/span&gt; 
&lt;span class="err"&gt;назначении&lt;/span&gt; &lt;span class="err"&gt;сайта&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;поэтому&lt;/span&gt; &lt;span class="err"&gt;нормальное&lt;/span&gt; &lt;span class="err"&gt;описание&lt;/span&gt; &lt;span class="err"&gt;не&lt;/span&gt; &lt;span class="err"&gt;может&lt;/span&gt; &lt;span class="err"&gt;быть&lt;/span&gt; &lt;span class="err"&gt;составлено&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;Однако&lt;/span&gt; 
&lt;span class="err"&gt;данная&lt;/span&gt; &lt;span class="err"&gt;страница&lt;/span&gt; &lt;span class="err"&gt;совершенно&lt;/span&gt; &lt;span class="err"&gt;необходима&lt;/span&gt; &lt;span class="err"&gt;хотя&lt;/span&gt; &lt;span class="err"&gt;бы&lt;/span&gt; &lt;span class="err"&gt;для&lt;/span&gt; &lt;span class="err"&gt;того&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;чтобы&lt;/span&gt; &lt;span class="err"&gt;посмотреть&lt;/span&gt; &lt;span class="err"&gt;на&lt;/span&gt; &lt;span class="err"&gt;ее&lt;/span&gt; 
&lt;span class="err"&gt;поведение&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;рамках&lt;/span&gt; &lt;span class="err"&gt;шаблона&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;настроек&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="err"&gt;В&lt;/span&gt; &lt;span class="err"&gt;общем&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;как&lt;/span&gt; &lt;span class="err"&gt;все&lt;/span&gt; &lt;span class="err"&gt;уже&lt;/span&gt; &lt;span class="err"&gt;вероятно&lt;/span&gt; &lt;span class="err"&gt;догадались&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;эта&lt;/span&gt; &lt;span class="err"&gt;страница&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;как&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;весь&lt;/span&gt; &lt;span class="err"&gt;остальной&lt;/span&gt; 
&lt;span class="err"&gt;сайт&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;целом&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;является&lt;/span&gt; &lt;span class="err"&gt;испытательным&lt;/span&gt; &lt;span class="err"&gt;полигоном&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;тестовой&lt;/span&gt; &lt;span class="err"&gt;площадкой&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;инструментом&lt;/span&gt; 
&lt;span class="err"&gt;для&lt;/span&gt; &lt;span class="err"&gt;получения&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;отработки&lt;/span&gt; &lt;span class="err"&gt;новых&lt;/span&gt; &lt;span class="err"&gt;навыков&lt;/span&gt; &lt;span class="err"&gt;автора&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;малознакомой&lt;/span&gt; &lt;span class="err"&gt;области&lt;/span&gt; &lt;span class="err"&gt;веб&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="err"&gt;творчества&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;не&lt;/span&gt; &lt;span class="err"&gt;побоюсь&lt;/span&gt; &lt;span class="err"&gt;этого&lt;/span&gt; &lt;span class="err"&gt;слова&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;веб&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="err"&gt;дизайна&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Для страниц не важна метаинформация, используемая в статьях. Только заголовок, остальное (дата, автор и все такое) использоваться не будет. То есть, использование метаданных определяется шаблоном, а назначение страниц чаще всего отличается от статейного &amp;mdash; их нет в ленте, у них неважен автор и теги.&lt;/p&gt;
&lt;p&gt;Запускаем сборку сайта:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;c&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican.exe&lt;/span&gt;&lt;span class="c1"&gt; content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь из папки output можно запустить index.html и посмотреть результат.&lt;/p&gt;
&lt;p&gt;Теперь мы имеем серенький фончик, шапку в виде названия сайта крупными буквами и горизонтального меню с категориями (&amp;laquo;Разное&amp;raquo; и &amp;laquo;Рыба&amp;raquo;) и страницами (&amp;laquo;О сайте&amp;raquo;). Меню, контент и футер на белом фоне со скругленными уголками. На первой странице последняя статья полностью и список остальных статей (в котором пока одна &amp;mdash; первая). В статье добавлен справа плавающий блок с метаданными &amp;mdash; категория, автор, теги и дата публикации. Сайдбаров нет. В футере ссылки, встроенные в шаблон и не убираемые при помощи файла конфигурации. Заголовок в шапке является ссылкой на корень папки output, что логично &amp;mdash; будь это корнем для сервера, тот подставил бы index.html, а нам придется делать это вручную. Верстка фиксированная. Ссылки &amp;mdash; что приятно &amp;mdash; теперь рабочие.&lt;/p&gt;
&lt;p&gt;В общем, бери, да радуйся. Можно пользоваться и так. Но, несмотря на то, что результат разительно отличается от &amp;laquo;бестемного&amp;raquo;, хочется улучшений. Да не просто хочется, а мы все-таки надеемся, что это творение будут смотреть люди. И читать эти люди будут, скорее всего, по-русски, а у нас метаданные отмечены на английском. Да и ссылки в футере&amp;hellip; Нет, я тоже благодарен авторам Python, Pelican и этой темы, но не до такой степени, чтобы на каждой странице давать ссылки на них. А еще хочется добавить рюшечек-финтифлюшечек, типа карты сайта, облака тегов, отсортировать меню иначе&amp;hellip;&lt;/p&gt;
&lt;p&gt;Короче говоря, надо бы взять тему за основу и поправить ее по своим надобностям. А может, вообще свою с нуля написать, а?&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>Pelican и наполнение заготовки сайта хоть чем-нибудь</title><link href="http://romeogolf.site/pelican-i-napolnenie-zagotovki-saita-khot-chem-nibud.html" rel="alternate"></link><updated>2016-01-15T20:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-15:pelican-i-napolnenie-zagotovki-saita-khot-chem-nibud.html</id><summary type="html">&lt;h2 id="_1"&gt;Фундамент готов&lt;/h2&gt;
&lt;p&gt;Но до финишной отделки еще далеко, пока даже стены не возведены. Разработка сайта на Pelican складывается из таких пунктов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;контент;&lt;/li&gt;
&lt;li&gt;тема;&lt;/li&gt;
&lt;li&gt;плагины;&lt;/li&gt;
&lt;li&gt;настройка.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Пункты равнозначны по важности и во многом зависят друг от друга. Ни одним из этих моментов нельзя пренебрегать или откладывать на потом, кроме, разве что, плагинов. Плагинами можно заняться ближе к концу, когда стандартных возможностей станет недостаточно.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Контент. Собственно статьи, блогпосты, сообщения разного рода, составляющие информационную ценность сайта. Пишется на reStructuredText или Markdown, лично я предпочел второй вариант, хотя первый обеспечивается пеликаном сразу, а для второго надо ставить соответствующий модуль Python. Каждый пост пишется в отдельном файле и складывается в папку &amp;laquo;content&amp;raquo;, логично, не правда ли? Pelican сам разберется, в каком виде и в какое место сайта впихнуть написанное, основываясь на метаданных в начале контентного файла и на структуре шаблонов.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Тема. Влияет на внешний вид сайта. Включает в себя разметку веб-страниц, для чего содержит шаблоны для разных их вариантов, и оформление, задаваемое таблицами стилей в файлах css, которых может быть и несколько. Здесь же могут храниться общие для всего сайта и привязанные к теме иконки, шрифты, сценарии JavaScript. Шаблоны основаны на шаблонизаторе Jinja2 (&amp;laquo;дзиндзя&amp;raquo;). Обычно присутствует базовый, задающий общий стиль, и его наследники, определяющие особенности отображения статичных страниц, статей, привязанных к дате, страниц со списками статей по тегам, категориям, авторам, датам, еще каких-нибудь страниц, не предусмотренных авторами Pelican, но придуманных автором сайта.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Плагины. Дополнительные модули Python, обеспечивающие функциональность, не заложенную в базе. Могут повышать удобство написания и быть незаметны для посетителей сайта (типа assets) или помогать в разработке непосредственно внешнего вида страниц (например, tag_cloud, который делает модное облако тегов).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настройка. Файлы конфигурации pelicanconf.py и publishconf.py в корне проекта сайта. Определяют массу всяческих деталей, влияющих на процесс генерации страниц сайта. По сути, содержат набор переменных, которые либо управляют процессом генерации, либо используются непосредственно в коде страниц.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Контент &amp;mdash; это то, с чем придется работать постоянно на протяжени всего времени жизни сайта. Если перестать писать &amp;mdash; сайт закончится. Он не сразу пропадет с просторов сети, но живым его уже нельзя будет назвать.&lt;/p&gt;
&lt;p&gt;Тему можно взять готовую и использовать так. Можно взять готовую и чуть-чуть подкорректировать ее до полной неузнаваемости. Можно взять, и написать с нуля самому. &lt;/p&gt;
&lt;p&gt;С темой можно определиться в самом начале и больше не трогать. Хотя, скорее всего по мере развития сайта ее придется расширять, дополнять, исправлять. То же и с настройками: основные придется сделать сразу, иначе невозможно работать. На этом можно остановиться, но наверняка будет нужно со временем вносить дополнения, особенно, если это будет требоваться при изменениях в теме или при добавлении плагинов.&lt;/p&gt;
&lt;p&gt;Добавление плагинов отложим на попозже.&lt;/p&gt;
&lt;h2 id="_2"&gt;Заготовка для контента&lt;/h2&gt;
&lt;p&gt;Начнем, пожалуй, с текстового наполнения. Дальнейшие эксперименты с внешним видом и поведением надо все-таки на чем-то проверять. Сделаем файл &lt;code&gt;first.md&lt;/code&gt; (непременно UTF-8) следующего содержания: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: Заголовок первой статьи
Date: 2016-01-20 10:00
Modified: 2016-01-20 11:00
Category: Рыба
Tags: блог, разное, тест, проверка
Slug: fish
Lang: ru
Translation: false
Status: published
Authors: Аноним, Аполлинарий Афиногенович Семиникейский-Дудытченко
Summary: Сильно сокращенное описание, из которого можно понять, зачем вообще 
читать эту статью в развернутом виде.

Собственно, статья. Некоторый пост, не несущий на самом деле никакой смысловой
нагрузки, предназначенный исключительно для заполнения отведенного ему
пространства в области отображения контента. На жаргончике &lt;span class="ni"&gt;&amp;amp;mdash;&lt;/span&gt; &lt;span class="ni"&gt;&amp;amp;laquo;&lt;/span&gt;рыба&lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;.

Может делиться на абзацы[^1]. Может **усиливать** и *выделять*. Может
использовать &lt;span class="nt"&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HyperText Markup Languige&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt;-теги напрямую.

[^1]: И это далеко не все возможности&lt;span class="ni"&gt;&amp;amp;hellip;&lt;/span&gt;

## Может включать заголовки и подзаголовки

* может содержать списки
* из нескольких пунктов,
* например, ненумерованных.

Может [ссылаться](http://example.link.com) на какую-нибудь несуществующую фигню, 
или даже проще: &lt;span class="nt"&gt;&amp;lt;http:&lt;/span&gt;&lt;span class="err"&gt;//example.link.com&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Как видно, файл начинается с метаданных, из которых Pelican понимает, как его обрабатывать и куда засовывать. Далее идет текст, при написании которого надо использовать некоторые правила &amp;mdash; соблюдать синтаксис языка Markdown. Тогда статья будет корректно преобразована в HTML, то есть, в нужные места будут вставлены соответствующие теги. Коротких шпаргалок по Markdown в интернете достаточно, например, &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"&gt;здесь&lt;/a&gt; или &lt;a href="https://en.support.wordpress.com/markdown-quick-reference/"&gt;тут&lt;/a&gt;, можно посмотреть и описание синтаксиса, допустим, &lt;a href="http://www.daringfireball.net/projects/markdown/syntax"&gt;вот&lt;/a&gt; и &lt;a href="http://learn.getgrav.org/content/markdown"&gt;еще&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;Подробнее о метаданных&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Title: Заголовок статьи. Будет отображаться в браузере (в панели и вкладке), а также использоваться в разных местах, где перечисляются статьи, если эта статья попадает под соответствующее условие: в списках статей по выбранному тегу, по категории, по автору и тому подобное.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date: Дата написания статьи. Может отображаться в самой статье, будет использоваться для сортировки статей по дате в ленте. Если не поставить, то будет выставлена в зависимости от настройки в файле конфигурации, параметр DEFAULT_DATE, который можно поставпть &amp;lsquo;fs&amp;rsquo;, тогда будет браться системная дата создания файла.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Modified: Дата правки статьи. Может использоваться в некоторых темах или самостоятельно.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Category: Категория, которая является верхним уровнем навигации, наравне со страницами и пользовательскими пунктами. Если есть несколько статей с одинаковыми категориямти &amp;mdash; они будут выведены списком при клике по этой категории в меню. В папке &amp;laquo;content&amp;raquo; для статей должна быть папка &amp;laquo;articles&amp;raquo;. В ней можно сделать папки с именами категорий и складывать статьи по соответствующим папкам, тогда этот пункт метаданных при настройках по умолчанию не нужен. Если же статья будет в корне &amp;laquo;articles&amp;raquo;, но без этого пункта метаданных, будет использоваться опция файла конфигурации DEFAULT_CATEGORY, по умолчанию &amp;mdash; &amp;lsquo;misc&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tags: Тэги, метки, ярлыки &amp;mdash; ключевые слова, по которым можно найти статьи схожей тематики, если это предусмотрено навигацией по сайту. Можно использовать для создания облака тегов, можно просто отображать внизу каждой статьи. Вещь необязательная, но полезная.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slug: Ключевое слово, используемое для создания имени HTML-файла статьи. Если отсутствует, будет сделано автоматически из Title, с использованием транслитерации при необходимости, поэтому в большинстве случаев может отсутствовать. Не должно повторяться у разных статей, иначе будет сгенерирована только последняя статья из имеющих одинаковый Slug, остальные затруться. Полезная вещь при создании многоязычных версий: у версий одной статьи на разных языках надо ставить одинаковый Slug, но разные Lang.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lang: Язык статьи. Может отсутствовать, используется опция файла конфигурации DEFAULT_LANG, по умолчанию &amp;mdash; &amp;lsquo;en&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Translation: Не нужная пока что штука, устанавливается в true, чтобы не дать пеликану скрыть в навигации статью с языком, отличающимся от DEFAULT_LANG, например, чтобы показать оригинал переведенной статьи.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Status: Может быть published (по умолчанию) или draft. В последнем случае статья считается черновиком и не используется при формировании навигации. Ее можно будет найти на сайте, только если точно знать ее адрес. Используется, например, в том случае, чтобы дать почитать ограниченному кругу, которому автор разошлет URL личной почтой. Статус draft на сегодняшний день для статей работает, а для страниц почему-то нет. Однако, для страниц есть статус hidden &amp;mdash; скрытая. Страницы с таким статусом генерируются в том месте, где и должны (статьи со статусом draft &amp;mdash; в папке draft), однако на них не создаются ссылки в других местах сайта, то есть, опять же, попасть на такую страницу можно только введя ее адрес прямо в строке браузера. Ну, или щелкнув по ней, запустить на отображение, если она лежит у вас дома.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Authors: Если авторов, пишущих для сайта, несколько, то можно сделать поиск статей, принадлежащих конкретному перу. Если отсутствует, будет использоваться значение опции файла конфигурации AUTHOR.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Summary: Отображается в лентах статей &amp;mdash; в списках, отсортированных по времени, тегу, автору и все такое. Что интересно: запись должна быть в одну строку. Это уже в статье простые переносы (без пустой строки) игнорируются. В примере строка перенесена, и вот результат: то, что до переноса, отображается в summary, а то, что после &amp;mdash; уже в тексте статьи.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Как видно, не все метаданные являются настоятельно необходимыми, можно использовать лишь часть. Верно и обратное &amp;mdash; если вдруг понадобится какая-то хитрая переменная, не предусмотренная разработчиками Pelican, можно ее добавить в заголовок, а потом в шаблоне использовать, типа того:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Danger&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;red&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;А потом где-нибудь в шаблоне статьи (придется немного править тему), рядом с заголовком, вставить такое:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;article.danger&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;Класс опасности: &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.danger&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;И тогда в месте, определенном шаблоном, для статей с этой метаинформацией появится &amp;laquo;Класс опасности: red&amp;raquo;. А для прочих статей не появится ничего.&lt;/p&gt;
&lt;h2 id="_4"&gt;Переплавка заготовок&lt;/h2&gt;
&lt;p&gt;Стоит для массовости сделать еще одну заготовку-рыбу, с учетом необязательности тегов, файл &lt;code&gt;second.md&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;Заголовок&lt;/span&gt; &lt;span class="err"&gt;второй&lt;/span&gt; &lt;span class="err"&gt;статьи&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;Разное&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;блог&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;разное&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;тест&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;Еще&lt;/span&gt; &lt;span class="err"&gt;одна&lt;/span&gt; &lt;span class="err"&gt;рыба&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;просто&lt;/span&gt; &lt;span class="err"&gt;для&lt;/span&gt; &lt;span class="err"&gt;массовости&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="err"&gt;Снова&lt;/span&gt; &lt;span class="err"&gt;рыба&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;снова&lt;/span&gt; &lt;span class="err"&gt;заготовка&lt;/span&gt; &lt;span class="err"&gt;текста&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;просто&lt;/span&gt; &lt;span class="err"&gt;так&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;для&lt;/span&gt; &lt;span class="err"&gt;заполнения&lt;/span&gt; &lt;span class="err"&gt;места&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;Ну&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; 
&lt;span class="err"&gt;самом&lt;/span&gt; &lt;span class="err"&gt;деле&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;не&lt;/span&gt; &lt;span class="err"&gt;цитировать&lt;/span&gt; &lt;span class="err"&gt;же&lt;/span&gt; &lt;span class="err"&gt;снова&lt;/span&gt; &lt;span class="err"&gt;Цицерона&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;laquo&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="err"&gt;О&lt;/span&gt; &lt;span class="err"&gt;пределах&lt;/span&gt; &lt;span class="err"&gt;добра&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; 
&lt;span class="err"&gt;зла&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;raquo&lt;/span&gt;&lt;span class="o"&gt;;,&lt;/span&gt; &lt;span class="err"&gt;да&lt;/span&gt; &lt;span class="err"&gt;еще&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;в&lt;/span&gt; &lt;span class="err"&gt;этом&lt;/span&gt; &lt;span class="err"&gt;ужасном&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;хотя&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; &lt;span class="err"&gt;общепринятом&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="err"&gt;подрезанном&lt;/span&gt; &lt;span class="err"&gt;и&lt;/span&gt; 
&lt;span class="err"&gt;искаженном&lt;/span&gt; &lt;span class="err"&gt;виде&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Теперь надо сделать вручную папку &amp;laquo;articles&amp;raquo; в папке &amp;laquo;content&amp;raquo; и перенести туда оба файла. Даем команду в консоли&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;c&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican.exe&lt;/span&gt;&lt;span class="c1"&gt; content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Получаем в ответ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Done: Processed 2 articles, 0 drafts, 0 pages and 0 hidden pages in 4.30 seconds.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Видим, что в обработке участвовало 2 статьи. При желании можно в папке &amp;laquo;content&amp;raquo; добавить папку &amp;laquo;pages&amp;raquo;, и сложить туда что-то подобное статье, чтобы посмотреть, чем в конечном итоге отличаются статьи от страниц, но это не принципиально. Интересно, что в папке &amp;laquo;output&amp;raquo; появились файлы, в том числе, &lt;code&gt;fish.html&lt;/code&gt; и &lt;code&gt;zagolovok-vtoroi-stati.html&lt;/code&gt;: одна именована по Slug, заданному явно, а другая &amp;mdash; по преобразованному автоматически. Это и есть наши статьи. Они появились на странице, открывающейся при запуске &lt;code&gt;index.html&lt;/code&gt;, причем, вторая, как ближайшая по времени &amp;mdash; выше по тексту и полностью, а первая &amp;mdash; в ленте, после &amp;laquo;Other articles&amp;raquo;, и с использованием Summary.&lt;/p&gt;
&lt;p&gt;Дизайн по-прежнему не то, чтобы ужасен &amp;mdash; он просто отсутствует напрочь. И ссылки работают плохо: &amp;laquo;Заголовок первой статьи&amp;raquo; или &amp;laquo;read more&amp;raquo; не дают возможности почитать первую статью. Никуда не ведут теги и категории. Пока что их можно посмотреть, прямо запустив соотвествующий файл (например, &lt;code&gt;tags.html&lt;/code&gt; или &lt;code&gt;first.html&lt;/code&gt;), заодно можно посмотреть, как Markdown-разметка переплавилась в HTML-разметку.&lt;/p&gt;
&lt;p&gt;Ну что же, теперь мы поднялись чуть выше фундамента и разобрались в основах написания контента. С вопросами дизайна &amp;mdash; к теме, с вопросами ссылок &amp;mdash; к файлам конфигурации. Но в следующий раз.&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>Pelican и создание сайта — начало</title><link href="http://romeogolf.site/pelican-i-sozdanie-saita-nachalo.html" rel="alternate"></link><updated>2016-01-15T10:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-15:pelican-i-sozdanie-saita-nachalo.html</id><summary type="html">&lt;h3 id="pelican"&gt;Почему статический сайт, почему Pelican и с чего начать&lt;/h3&gt;
&lt;p&gt;Стоит ли заводить сайт &amp;mdash; вопрос ставить не будем. Мотивы у всех разные, но если уж определился &amp;mdash; так тому и быть. Кто считает, что не стоит &amp;mdash; можно дальше не читать.&lt;/p&gt;
&lt;p&gt;Надо сразу упомянуть некоторые детали: излагается точка зрения автора, худо-бедно подтвержденная собственным опытом с использованием настольного компьютера под управлением Windows (XP и 7). &lt;/p&gt;
&lt;p&gt;Если возникает навязчивое желание или настоятельная необходимость поселить на просторах интернета немножечко себя, возникает масса поводов для раздумий. Нужно выбрать способ размещения сайта &amp;mdash; статический, с использованием системы управления контентом (CMS), что-нибудь совсем самодельное, может быть, с применением каких-нибудь фреймворков или даже без. При выборе CMS или генератора статических сайтов надо определиться с языком, на котором это дело будет крутиться. Надо выбрать хостинг со всеми вытекающими заботами &amp;mdash; при приемлемом уровне цены (а лучше &amp;mdash; халявы) нужно, чтобы хостер поддерживал нужную CMS и базу данных&amp;hellip; &lt;/p&gt;
&lt;p&gt;Конечно, сайт можно просто заказать. Разработку, оформление, размещение, поддержку, раскрутку&amp;hellip; Только пихай туда статьи и фотки. Но, во-первых, неинтересно, во-вторых, для хобби довольно-таки затратно. Подчеркиваю &amp;mdash; речь идет именно о хобби. &lt;/p&gt;
&lt;p&gt;Профессионалу очевидно &amp;mdash; нормальный инструмент требует соответствующих вложений. Профессиональный инструмент требует порой значительных затрат. Но он для того и служит, чтобы приносить заработок и окупаться. Если сайт предназначается для использования в профессиональной сфере &amp;mdash; это инструмент, и отношение к нему должно быть соответствующее. Для себя же это скорее игрушка, можно обойтись и самоделкой.&lt;/p&gt;
&lt;h4 id="_1"&gt;Почему &amp;laquo;статика&amp;raquo;&lt;/h4&gt;
&lt;p&gt;Итак, игрушку хотелось бы подешевле, но такую же, как настоящая. А хостеров так много, они такие разные&amp;hellip; Кто-то поддерживает PHP, а кто-то &amp;mdash; нет. Где-то можно разместить сайт с движком на Ruby или Python, но не везде. У кого-то MySQL, а у кого-то PostgreSQL&amp;hellip; А на самых дешевых (тем более, бесплатных) нет вообще ничего. И получается, что статический сайт не ограничен по площадке размещения &amp;mdash; он заработает везде!&lt;/p&gt;
&lt;p&gt;Еще один заметный плюс для &amp;laquo;чайника&amp;raquo; &amp;mdash; для того, чтобы посмотреть, на что похож готовый свежесобранный статический сайт, не требуется веб-сервер, даже локальный, и не нужен никакой движок &amp;mdash; CMS, фреймворк, свои костылевелосипеды &amp;mdash; ничего, только браузер. Запускаешь index.html в корне сайта и наслаждаешься результатом (ну, или страдаешь, но это уже вопросы кривизны рук и художественности вкуса).&lt;/p&gt;
&lt;p&gt;Можно упомянуть и такой условный плюс &amp;mdash; возможность поковыряться непосредственно в конечном результате &amp;mdash; поправить разметку, стили и все такое. Преимущество слабенькое, но для отладки, особенно если не очень-то разбираешься в HTML и CSS, может немножко помочь. Но лучше не надо.&lt;/p&gt;
&lt;p&gt;Прочие преимущества &amp;laquo;статики&amp;raquo; для простой игрушки с двумя десятками страниц не имеют особого значения, но давайте на них посмотрим:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Скорость загрузки страниц. Нет программной обработки запроса на генерацию страницы, не требуется времени на формирование.&lt;/li&gt;
&lt;li&gt;Безопасность. Не надо следить за обновлениями из-за внезапно обнаруженной критической уязвимости используемого софта, ибо нету нашего софта на сервере.&lt;/li&gt;
&lt;li&gt;Неустареваемость. Нет настоятельной необходимости следить за актуальностью софта по упомянутой причине. Технология и так устаревшая до безнадежности (первые сайты были именно статическими). Готовые страницы, лежащие на сервере, не зависят от версии генератора. От свежести используемой программы зависит, пожалуй, только удобство работы.&lt;/li&gt;
&lt;li&gt;Переносимость. Можно спокойно таскать с хостинга на хостинг хоть по десять раз на дню, не думая о том, подходит ли вам площадка. Все подходят.&lt;/li&gt;
&lt;li&gt;Контроль версий. Для статических сайтов можно вести историю, используя любую удобную систему контроля версий, в некоторых случаях это может быть удобно и полезно, опять же, разновидность резервного копирования.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Самый заметный недостаток статического сайта (который некоторые называют достоинством) &amp;mdash; отсутствие базы данных и средств работы с ней. Нет обработки информации от пользователя на стороне сервера, ее хранения и отображения, а значит, нет и обратной связи. Нельзя полностью автономно сделать комментарии, форум, формы заказа или запроса чего-либо, даже счетчик посещения страниц. &amp;laquo;Нельзя автономно&amp;raquo; &amp;mdash; еще не значит &amp;laquo;нельзя ни в какую&amp;raquo;. Можно встроить в код страницы и использовать сторонние сервисы, среди которых встречаются как хорошие, так и бесплатные.&lt;/p&gt;
&lt;h4 id="pelican_1"&gt;Почему Pelican&lt;/h4&gt;
&lt;p&gt;Ну, допустим, статический сайт. Но не полностью же вручную его делать! Мало того, что муторно и неинтересно, так еще в процессе можно многое забыть, упустить. Поправишь разметку одной страницы &amp;mdash; надо скопировать эту правку на все остальные. Изменишь имя или папку одной картинки или статьи &amp;mdash; разыскивай все ссылки и корректируй. Да и вообще, делать навигацию по сайту вручную достаточно непросто. Однако, эти операции автоматизируемы. &lt;/p&gt;
&lt;p&gt;Генераторы статических сайтов (по крайней мере, существенной частью) основаны на шаблонах страниц, так что о разметке, дизайне и стилях надо заботиться в одном месте &amp;mdash; в шаблоне. Тексты пишутся с использованием упрощенных языков разметки, типа того же &lt;a href="https://ru.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt;, что тоже упрощает дело. Навигация по сайту, типа меню или облака тегов, формируется автоматом, что не может не радовать. Остается выбрать генератор.&lt;/p&gt;
&lt;p&gt;Лично для меня выбор начался с языка. Те генераторы, которые я накопал в сети, написаны на Ruby, Python, Bash, CofeeScript, PHP. Причем, в основном встречались первые два. Учитывая работу в среде Windows, в любом случае надо устанавливать интерпретатор. Мне ближе всего из перечисленного Python, причем, 3.3 уже установлен. А из питонова гнезда пеликан показался самым симпатичным чисто субъективно &amp;mdash; вроде, немало хороших отзывов (хотя и другие не ругают), вроде, неплохая документация (ну, не у него одного), вроде, прилично информации помимо официальной (ну, у других даже не смотрел)&amp;hellip;&lt;/p&gt;
&lt;p&gt;Вообще-то говоря, язык написания генератора не важен до тех пор, пока не возникнет желание или необходимость написать собственный плагин или поправить/дополнить движок. Так что, имеет смысл обратить внимание на тот, у которого разработка не заглохла, но и не в зачаточной стадии. Pelican и здесь неплох.&lt;/p&gt;
&lt;h4 id="_2"&gt;Что же надо для начала&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Нулевое, в виде обеспечения всего остального &amp;mdash; нужно вычислительное устройство, подключенное к интернету. Настольный (или подстольный) компьютер, ноутбук, планшет, да хоть телефон, если хватит памяти, и операционная система позволяет установить Python. Интернет нужен сначала для установки недостающих модулей Python, потом для публикации результатов работы и наслаждения ими. Кажется, это очевидно. Само собой, нужен браузер. Чем свежее &amp;mdash; тем лучше. Ну, и не помешает предварительно-ознакомительно полистать пеликановую &lt;a href="http://docs.getpelican.com/en/3.6.3/" title="Pelican 3.6.3"&gt;документацию&lt;/a&gt;. К сожалению, на английском. Желателен файловый менеджер с поддержкой консоли &amp;mdash; вводом команд и просмотром результата. В Windows для этой цели хорош FAR, хотя можно обойтись и чистой консолью cmd.exe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Первое &amp;mdash; Python. Язык скриптовый, интерпретируемый. Без интерпретатора программы на нем не пойдут. Во многих дистрибутивах Linux идет &amp;laquo;из коробки&amp;raquo; или ставится элементарно. Установка для Windows с &lt;a href="http://www.python.org/"&gt;официального сайта&lt;/a&gt; тоже не вызывает безумных трудностей, но есть некоторые особенности.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Если месье знает толк в извращениях и по-прежнему насилует Windows XP (или XP &amp;mdash; его), то Python 3.3 &amp;mdash; потолок. Версия 3.4 уже не пойдет.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если по какой-то причине (например, по предыдущей) стоит именно 3.3, то в ней &amp;laquo;из коробки&amp;raquo; нет модуля pip, а без него будет заметно хуже, чем с ним. С версии 3.4 он должен уже идти в комплекте поставки, а на 3.0&amp;ndash;3.2 работа пеликана не гарантируется. Этот модуль нужен для установки остальных модулей, он умеет определять зависимости (если требуемому модулю для работы нужны еще какие-то), самостоятельно находить их и устанавливать. Pip можно взять, например, &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip"&gt;здесь&lt;/a&gt; или &lt;a href="http://pypi.python.org/pypi/pip/"&gt;здесь&lt;/a&gt;. При этом его тоже еще надо установить. Со скриптом  &lt;a href="https://pip.pypa.io/en/latest/installing.html#install-pip"&gt;get-pip.py&lt;/a&gt; у меня как-то сразу не заладилось, не стал разбираться в причинах. Запустил в консоли команду&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\Python33\python.exe&lt;/span&gt;&lt;span class="c1"&gt; pip-7.1.2-py2.py3-none-any.whl/pip install pip-7.1.2-py2.py3-none-any.whl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;из папки, в корне которой лежал скачанный &lt;code&gt;pip-7.1.2-py2.py3-none-any.whl&lt;/code&gt;, модуль установился. В качестве консоли использовал FAR &amp;mdash; тут тебе и командная строка, и простой выбор рабочего каталога. Напомню, речь идет о работе в Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Официальная документация Pelican и некоторые его пользователи рекомендуют установить и использовать virtualenv. Сильно сомневаюсь в необходимости этой операции, особенно если Python планируется использовать только для Pelican.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Второе &amp;mdash; собственно Pelican. Установка выполняется очень просто в соответствии с документацией:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Здесь неочевидная тонкость для тех, кто с питонами на &amp;laquo;вы&amp;raquo;, особенно, если дело творится под Windows: это не команда интерпретатора Python, и вводить ее надо не в консоли Python, а просто в консоли &amp;mdash; FAR или cmd.exe. Можно создать текстовый файл с расширением .cmd или .bat с этой строчкой внутри и запустить его на выполнение с тем же эффектом. Эффект будет положительным, если известен путь к pip (например, прописан в переменной PATH или pip прямо тут, в текущей папке), ибо, по сути, это программа. В Windows, чтобы наверняка, можно написать&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\Python33\Scripts\pip.exe&lt;/span&gt;&lt;span class="c1"&gt; install pelican&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Если все пройдет, как задумано, pip установит модули, без которых Pelican работать не будет:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;feedgenerator, для генерации Atom feeds&lt;/li&gt;
&lt;li&gt;jinja2, для поддержки шаблонов, используемых при разработке сайта&lt;/li&gt;
&lt;li&gt;pygments, для подсветки синтаксиса примеров кода на публикуемых страницах&lt;/li&gt;
&lt;li&gt;docutils, для поддержки reStructuredText в качестве входного формата текстов для сайта&lt;/li&gt;
&lt;li&gt;pytz, для определения временной зоны&lt;/li&gt;
&lt;li&gt;blinker, для системы сигналов, широковещательных и между объектами&lt;/li&gt;
&lt;li&gt;unidecode, для ASCII-транслитерации текста Unicode&lt;/li&gt;
&lt;li&gt;six, утилиты совместимости Python 2 и 3&lt;/li&gt;
&lt;li&gt;MarkupSafe, для безопасной работы со строками на языках разметки XML/HTML/XHTML&lt;/li&gt;
&lt;li&gt;python-dateutil, чтобы читать даты в метаданных&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В конце будет установлен и сам pelican.&lt;/p&gt;
&lt;p&gt;Аналогичным образом стоит установить Markdown, модуль для обработки языка разметки, на котором писать куда удобнее, чем на HTML:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install Markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Хотя можно писать и на reStructuredText (он же reST), поддержка которого к этому моменту уже установлена. Но лучше все равно поставить сразу &amp;mdash; не помешает, и его могут требовать некоторые темы или плагины.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_3"&gt;Можно попробовать, заработает ли&lt;/h4&gt;
&lt;p&gt;Создадим папку (директорию, каталог, как хотите) для проекта сайта. Практически где угодно. Например, &lt;code&gt;D:\site&lt;/code&gt;. Зайдя в эту папку, запустим команду&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican-quickstart.exe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;То есть, документация рекомендует быть проще и скомандовать &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;но, напоминаю, это не просто команда, это программа, которая команду выполняет, и лежит она в папке Scripts там, где установлен Python
Программка запустится, и мы будем отвечать на вопросы по-английски, появляющиеся в окне консоли. Если в конце вопроса есть в квадратных скобках вариант ответа по умолчанию или (Y/n), можно тупо давить ввод. Если нет &amp;mdash; надо хоть что-то писать. В конце этой викторины (если использовать ответы по умолчанию) в выбранной папке появятся еще две папки &amp;mdash; content и output, а также набор файлов &amp;mdash; develop_server.sh, fabfile.py, Makefile, pelicanconf.py, publishconf.py.&lt;/p&gt;
&lt;p&gt;Уже сейчас, не написав ни строчки, можно собрать полупустой сайт, если эту заготовку позволительно так назвать. Для этого, опять же в корне &lt;code&gt;D:\site&lt;/code&gt;, надо дать команду&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;c&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\python33\Scripts\pelican.exe&lt;/span&gt;&lt;span class="c1"&gt; content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;И хотя папка content (предназначенная для заготовок статей) пуста, и на выходе будет все по нулям:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Done: Processed 0 articles, 0 drafts, 0 pages and 0 hidden pages in 0.08 seconds.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;в папке output появится папка theme и файлы html: archives, authors, categories, index и tags. Файл index.html можно запустить и посмотреть, что за ерунда получилась. Там будет заголовок и немножко ссылок на сайты инструментов, при помощи которых это всё получилось: Pelican, Python.org и Jinja2. И всё это упаковано в умопомрачительный дизайн в крайне минималистском стиле.&lt;/p&gt;
&lt;p&gt;Итого: инструмент готов к использованию.&lt;/p&gt;
&lt;h4 id="p-s-pelican-quickstart"&gt;P. S. Разбор анкеты pelican-quickstart&lt;/h4&gt;
&lt;p&gt;Для тех, у кого совсем-совсем плохо с английским, или очень-очень лениво &amp;mdash; что от нас хочет утилита pelican-quickstart, вольный перевод.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Welcome to pelican-quickstart v3.6.3.&lt;/code&gt; &amp;mdash; Добро пожаловать. Номер версии.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;This script will help you create a new Pelican-based website.&lt;/code&gt; &amp;mdash; Этот скрипт поможет вам создать новый пеликановый вебсайт.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Please answer the following questions so this script can generate the files needed by Pelican.&lt;/code&gt; &amp;mdash; Пожалуйста, ответьте на следующие вопросы, чтобы скрипт сгенерировал файлы, необходимые Пеликану.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; Where do you want to create your new web site? [.]&lt;/code&gt; Где вы желаете создать сайт? По умолчанию &amp;mdash; прямо здесь, в этой папке. Можно просто нажать Enter.&lt;br /&gt;
&lt;code&gt;&amp;gt; What will be the title of this web site?&lt;/code&gt; Какой заголовок у этого сайта? Надо хоть что-нибудь написать.&lt;br /&gt;
&lt;code&gt;&amp;gt; Who will be the author of this web site?&lt;/code&gt; Кто будет автор этого сайта? Тоже надо написать.&lt;br /&gt;
&lt;code&gt;&amp;gt; What will be the default language of this web site? [en]&lt;/code&gt; Какой будет язык по-умолчанию для этого сайта? Предлагается английский, можно написать ru, но вообще-то неважно, все равно потом лезть в настройки и можно поправить позже.&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)&lt;/code&gt; Желаете указать URL-префикс? Если жамкнуть ввод, будет понято, что таки да, и появится следующий вопрос:&lt;br /&gt;
&lt;code&gt;&amp;gt; What is your URL prefix? (see above example; no trailing slash)&lt;/code&gt; А какой тогда префикс? (см. пример выше, без слэша в конце), но можно поставить, например, тупо слэш.&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to enable article pagination? (Y/n)&lt;/code&gt; Вам нужно разбиение на несколько страниц статей? (по умолчанию будет &amp;laquo;да!&amp;raquo;, как и в других местах с вопросом Y/n, или &amp;laquo;нет!&amp;raquo;, если y/N, то есть, смотря какая буква заглавная)&lt;br /&gt;
&lt;code&gt;&amp;gt; How many articles per page do you want? [10]&lt;/code&gt; Сколько статей на странице вам надо? (по умолчанию &amp;mdash; 10)&lt;br /&gt;
&lt;code&gt;&amp;gt; What is your time zone? [Europe/Paris]&lt;/code&gt; Ваша временная зона? Или, по-русски говоря, часовой пояс? (По умолчанию &amp;mdash; Париж, свою можно спросить у &lt;a href="https://en.wikipedia.org/wiki/Time_zone" title="Time zone"&gt;Вики&lt;/a&gt;)&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)&lt;/code&gt; Вам надо сделать Fabfile/Makefile для автоматической генерации и публикации? Вообще-то, не обязательно. Поначалу будем делать вручную, а там видно будет.&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)&lt;/code&gt; Вам нужна автоперезагрузка скрипта simpleHTTP для поддержки разработки сайта и темы? Вообще-то, можно обойтись без этого скрипта совсем.&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to upload your website using FTP? (y/N)&lt;/code&gt; Хотите выкладывать ваш сайт на хостинг с использованием FTP? Если честно, пока не собираемся выкладывать, а потом определимся.&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to upload your website using SSH? (y/N)&lt;/code&gt; Хотите выгружать через SSH?&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to upload your website using Dropbox? (y/N)&lt;/code&gt; или Dropbox?&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to upload your website using S3? (y/N)&lt;/code&gt; или S3?&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)&lt;/code&gt; или Rackspace Cloud Files? (японский городовой, кто это вообще?)&lt;br /&gt;
&lt;code&gt;&amp;gt; Do you want to upload your website using GitHub Pages? (y/N)&lt;/code&gt; Будете использовать GitHub Pages? (Вот, это уже ближе к правде&amp;hellip;)&lt;br /&gt;
&lt;code&gt;Done. Your new project is available at d:\site&lt;/code&gt; Всё. Ваш новый проект доступен в указанной папке.  &lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>Первая запись</title><link href="http://romeogolf.site/pervaia-zapis.html" rel="alternate"></link><updated>2016-01-11T10:00:00+05:00</updated><author><name>RomeoGolf</name></author><id>tag:romeogolf.site,2016-01-11:pervaia-zapis.html</id><summary type="html">&lt;p&gt;Первая запись в блоге. Первый опыт в сайтостроении (не считая давних вялых попыток, не ушедших дальше локального веб-сервера). Первая попытка применить и немного расширить свои непрофессиональные знания в области HTML, CSS и прочих веб-технологий.&lt;/p&gt;
&lt;p&gt;Сознаю, что моя страничка не сможет стать уникальным или выдающимся явлением. Однако намерен хотя бы не увеличивать энтропию &amp;mdash; копировать чужое только для цитирования, весь текст &amp;mdash; только авторский. Ну, по крайней мере, хотя бы авторский перевод.&lt;/p&gt;
&lt;p&gt;Попытаюсь быть местами интересным, местами полезным. &lt;/p&gt;</summary><category term="разное"></category></entry></feed>